{"version":3,"sources":["view/home/Home.module.scss","view/login/Login.module.scss","view/pages/songs-form/songs-form.module.scss","static/img/WechatIMG1.jpeg","static/img/WechatIMG2.jpeg","view/pages/songs-list/songs-list.module.scss","redux/reducer/song.ts","view/common/Auth.tsx","service/login.ts","utils/validators.ts","view/login/Login.tsx","service/index.ts","view/common/header/Header.tsx","service/songs.ts","redux/action/songs.ts","view/pages/songs-form/songs-form.tsx","redux/reducer/test.ts","PrivateRoute.tsx","view/pages/songs-list/columns.tsx","view/pages/songs-list/songs-list.tsx","view/home/Home.tsx","view/sign-up/sign-up.tsx","view/pages/hot-songs/hot-songs.tsx","redux/action/test.ts","view/pages/test.tsx","App.tsx","serviceWorker.ts","redux/reducer.ts","redux/index.ts","index.tsx","view/common/header/Header.module.scss"],"names":["module","exports","SongActionType","AuthContext","createContext","authTokens","setAuthTokens","data","useAuth","useContext","login","name","password","remember","a","console","log","token","validEmail","type","message","layout","labelCol","span","Login","props","Form","useForm","form","useState","isLoggedIn","setLoggedIn","referer","location","state","setFieldsValue","email","localStorage","getItem","onFinish","values","setItem","to","pathname","className","style","body","config","count","zIndex","title","bordered","initialValues","store","Item","label","rules","required","Password","valuePropName","htmlType","initState","songsList","total","loading","instance","Axios","create","baseURL","withCredentials","interceptors","request","use","err","Promise","reject","response","status","notification","error","statusText","menuType","initSongsList","query","service","get","params","playSong","platform","id","initHotSong","SongDispatcher","dispatch","getHotSong","then","res","GetHotSong","payload","songs","totalCount","length","getSongList","GetSongList","this","wrapperCol","SongsForm","history","useHistory","URLSearchParams","search","dispatcher","useDispatch","rootDispatcher","provider","setprovider","keyword","e","currentTarget","value","info","replace","page","selectAfter","defaultValue","onChange","handleSelectProvider","Option","formBody","addonAfter","placeholder","onPressEnter","event","Header","Layout","Content","Footer","ActionType","HeaderLayout","avator","onClick","window","href","loginAvatar","icon","UserOutlined","content","children","textAlign","PrivateRoute","Component","rest","render","songsColumn","width","play","download","dataIndex","key","text","record","link","target","hide","_text","artists","map","item","color","album","align","display","justifyContent","fontSize","PlayCircleOutlined","originalId","DownloadOutlined","SongsList","currentSongUrl","setcurrentSongUrl","meted","Number","setpage","currentIndex","setcurrentIndex","setwidth","setcurrentList","setname","audioRef","React","createRef","autoPlay","setautoPlay","useSelector","song","useEffect","getWidth","init","document","querySelector","offsetWidth","p","k","songSource","catch","columns","navigator","match","createElement","setAttribute","click","myFrame","src","appendChild","playAll","active","dataSource","pagination","showSizeChanger","player","currentSong","ref","audio","controls","onEnded","muted","Home","hoverable","card","cover","alt","hotImg","description","listImg","SignUp","HotSongs","initialState","address","RootDispatcher","updateName","UpdateName","updateAddress","UpdateAddress","deleteName","DeleteName","deleteAddress","DeleteAddress","TextFoo","rootDispatch","App","existingTokens","JSON","parse","Provider","stringify","exact","path","component","Boolean","hostname","allReducer","action","test","rootReducer","combineReducers","createStore","applyMiddleware","thunk","promiseMiddleware","ReactDOM","StrictMode","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.81e771cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Home_body__3JG4K\",\"card\":\"Home_card__2hkvf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Login_body__3ED08\",\"login\":\"Login_login__29f7P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formBody\":\"songs-form_formBody__2thJl\"};","module.exports = __webpack_public_path__ + \"static/media/WechatIMG1.65751f47.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/WechatIMG2.45083ac7.jpeg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"player\":\"songs-list_player__1rro3\",\"audio\":\"songs-list_audio__2I1Ip\",\"currentSong\":\"songs-list_currentSong__11ZF5\",\"playAll\":\"songs-list_playAll__1s3OX\",\"hide\":\"songs-list_hide__2mp_v\"};","import { Reducer, Action } from \"redux\";\n\nexport interface ISongForm {\n    provider: string;\n    keyword: string;\n    page: number;\n}\nexport interface ISong {\n    originalId: string;\n    name: string;\n    link: string;\n    mvLink: string;\n    artists: IAlbum[];\n    album: IAlbum;\n    hasCopyright: boolean;\n    fee: number;\n    platform: string;\n}\n\nexport interface IAlbum {\n    name: string;\n    link: string;\n}\n\nexport interface ISongInitial {\n    songsList: ISong[];\n    total: number;\n    loading: boolean;\n}\n\nconst initState: ISongInitial = {\n    songsList: [],\n    total: 0,\n    loading: true,\n};\n\nexport interface ISongQuery {\n    provider: string;\n    keyword: string;\n    page: number;\n}\n\nexport enum SongActionType {\n    GetSongList,\n    GetHotSong\n}\n\nexport interface ISongDispatchAction extends Action<SongActionType> {\n    payload: Partial<ISongInitial>;\n}\n\nexport const songReducer: Reducer<ISongInitial, ISongDispatchAction> = (\n    state = initState,\n    action\n): ISongInitial => {\n    switch (action.type) {\n        case SongActionType.GetSongList:\n            return {\n                songsList: action.payload.songsList!,\n                total: action.payload.total!,\n                loading: action.payload.loading!,\n            };\n        case SongActionType.GetHotSong:\n            return {\n                ...state,\n                songsList: action.payload.songsList!,\n                total: action.payload.total!,\n                loading: action.payload.loading!,\n            };\n        default:\n            return state;\n    }\n};\n","import { createContext, useContext } from 'react';\n\nexport const AuthContext = createContext<{ authTokens: any; setAuthTokens: (data: object) => void }>({\n    authTokens: '',\n    setAuthTokens: (data: object) => {\n        return data;\n    },\n});\nexport const useAuth = () => {\n    return useContext(AuthContext);\n};\n","// import service from './index';\n\n/**\n * login\n * @param name\n * @param password\n */\nexport const login = async (name: string, password: string, remember: boolean) => {\n    console.log(name, password, remember);\n    \n    // return service.post('/login', { name, password, remember });\n    return {\n        token: '234234234',\n    };\n};\n","import { Rule } from 'antd/lib/form';\n\nexport const validEmail: Rule = {\n    type: 'email',\n    message: 'please input correct email',\n};\n","import React, { FC, useState } from 'react';\nimport { useAuth } from '../common/Auth';\nimport { Redirect } from 'react-router';\nimport { Card, Form, Input, Checkbox, Button } from 'antd';\nimport style from './Login.module.scss';\nimport ReactCanvasNest from 'react-canvas-nest';\nimport { login } from '../../service/login';\nimport { validEmail } from '../../utils/validators';\n\nconst layout = {\n    labelCol: { span: 5 },\n};\ninterface IProps {\n    [x: string]: any;\n}\nconst Login: FC = (props: IProps) => {\n    const [form] = Form.useForm();\n    const [isLoggedIn, setLoggedIn] = useState(false);\n    const { setAuthTokens } = useAuth();\n    const referer = ((props.location || {}).state || {}).referer || '/';\n\n    form.setFieldsValue({ email: localStorage.getItem('email'), password: localStorage.getItem('password') });\n\n    const onFinish = async (values: { email: string; password: string; remember: boolean }) => {\n        if (values.remember) {\n            localStorage.setItem('email', values.email);\n            localStorage.setItem('password', values.password);\n        } else {\n            localStorage.setItem('email', '');\n            localStorage.setItem('password', '');\n        }\n        const { token } = await login(values.email, values.password, values.remember);\n        setAuthTokens({ token });\n        setLoggedIn(true);\n    };\n\n    if (isLoggedIn) {\n        return <Redirect to={referer.pathname || '/'} />;\n    }\n\n    return (\n        <div className={style.body}>\n            <ReactCanvasNest config={{ count: 50 }} style={{ zIndex: 0 }} />\n            <Card title=\"Login\" bordered={false} className={style.login}>\n                <Form\n                    {...layout}\n                    form={form}\n                    name=\"basic\"\n                    initialValues={{ remember: true }}\n                    onFinish={(store) =>\n                        onFinish({ email: store.email, password: store.password, remember: store.remember })\n                    }\n                >\n                    <Form.Item\n                        label=\"E-mail\"\n                        name=\"email\"\n                        rules={[validEmail, { required: true, message: 'Please input your email!' }]}\n                    >\n                        <Input />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Password\"\n                        name=\"password\"\n                        rules={[{ required: true, message: 'Please input your password!' }]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n\n                    <Form.Item name=\"remember\" valuePropName=\"checked\">\n                        <Checkbox>Remember me</Checkbox>\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Submit\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Card>\n        </div>\n    );\n};\nexport default Login;\n","import Axios from 'axios';\nimport { notification } from 'antd';\n\nconst instance = Axios.create({\n    baseURL: '/api',\n    withCredentials: false,\n});\n\ninstance.interceptors.request.use(\n    (config) => {\n        return config;\n    },\n    (err) => {\n        return Promise.reject(err);\n    }\n);\n\ninstance.interceptors.response.use(\n    (response) => {\n        if (response.status === 200) {\n            return response.data.data;\n        } else {\n            notification.error({ message: response.statusText });\n            return Promise.reject(response.data);\n        }\n    },\n    (err) => {\n        return Promise.reject(err);\n    }\n);\n\nexport default instance;\n","import React, { FC, ReactNode } from 'react';\nimport { Layout, Avatar } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport style from './Header.module.scss';\nimport SongsForm from '../../pages/songs-form/songs-form';\n\nconst { Header, Content, Footer } = Layout;\n\nexport enum menuType {\n    歌单 = 'songs-list',\n    最新音乐 = 'latest-list',\n}\n\ninterface IProps {\n    children?: ReactNode;\n}\nconst HeaderLayout: FC = (props: IProps) => {\n    return (\n        <Layout className={style.layout}>\n            <Header>\n                <div className={style.search}>\n                    <div className={style.avator} onClick={() => window.location.href='/' }></div>\n                    <SongsForm/>\n                </div>\n                <Avatar\n                    className={style.loginAvatar}\n                    icon={<UserOutlined />}\n                />\n            </Header>\n            <Content className={style.content}>\n                <div className='site-layout-content'>{props.children}</div>\n            </Content>\n            <Footer style={{ textAlign: 'center' }}>\n                Young Mannix ©2020 Created by Mannix Lei\n            </Footer>\n        </Layout>\n    );\n};\n\nexport default HeaderLayout;\n","import service from './index';\nimport { ISongQuery, ISong } from '../redux/reducer/song';\n\n/**\n * fetch song list\n * @param provider\n * @param keyword\n */\nexport const initSongsList = async (query: ISongQuery): Promise<{ songs: ISong[]; totalCount: number }> => {\n    return await service.get('/search', {\n        params: {\n            ...query,\n        },\n    });\n};\n\n/**\n * play song\n * @param platform\n * @param id\n */\nexport const playSong = async (platform: string, id: string): Promise<{ songSource: string }> => {\n    return await service.get(`/song_source/${platform}/${id}`);\n};\n\n/**\n * load hot songs\n */\nexport const initHotSong = async (): Promise<{ songs: ISong[]; totalCount: number }> => {\n    return await service.get('/hot_list/netease');\n};\n","import { Dispatch } from 'redux';\nimport {\n    ISongForm,\n    SongActionType,\n    ISongDispatchAction,\n} from '../reducer/song';\nimport { initHotSong, initSongsList } from '../../service/songs';\n\nexport class SongDispatcher {\n    private readonly dispatch: Dispatch<ISongDispatchAction>;\n\n    constructor(dispatch: Dispatch<ISongDispatchAction>) {\n        this.dispatch = dispatch;\n    }\n\n    getHotSong = async () => {\n        await initHotSong().then((res) => {\n            this.dispatch({\n                type: SongActionType.GetHotSong,\n                payload: {\n                    songsList: res.songs,\n                    total: res.totalCount || res.songs.length,\n                    loading: false,\n                },\n            });\n        });\n    };\n    getSongList = async (query: ISongForm) => {\n        await initSongsList(query).then((res) => {\n            this.dispatch({\n                type: SongActionType.GetSongList,\n                payload: {\n                    songsList: res.songs,\n                    total: res.totalCount || res.songs.length,\n                    loading: false,\n                },\n            });\n        });\n    };\n}\n","import React, { FC, useState } from 'react';\nimport { Form, Input, message, Select } from 'antd';\nimport { useHistory } from 'react-router';\nimport { useDispatch } from 'react-redux';\nimport { SongDispatcher } from '../../../redux/action/songs';\nimport style from './songs-form.module.scss';\n\nconst layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n};\n\ninterface IProps {\n    style?: React.CSSProperties;\n}\nconst SongsForm: FC<IProps> = (props) => {\n    const history = useHistory();\n    const params = new URLSearchParams(history.location.search);\n\n    const dispatcher = useDispatch();\n    const rootDispatcher = new SongDispatcher(dispatcher);\n    const [form] = Form.useForm();\n    const [provider, setprovider] = useState(params.get('provider') || 'netease');\n    const [keyword, setkeyword] = useState(params.get('keyword'));\n    form.setFieldsValue({ keyword: params.get('keyword') });\n\n    const search = async (e: React.KeyboardEvent<HTMLInputElement>) => {\n        if (!e.currentTarget.value) {\n            message.info('please input something ~~');\n            return;\n        }\n        history.replace(`/list?provider=${provider}&keyword=${e.currentTarget.value}&page=1`);\n        rootDispatcher.getSongList({ provider, keyword: e.currentTarget.value, page: 1 });\n    };\n    const handleSelectProvider = (value: string) => {\n        setprovider(value);\n    };\n    const selectAfter = (\n        <Select defaultValue={provider || 'netease'} className=\"select-after\" onChange={(value) => handleSelectProvider(value)}>\n          <Select.Option value=\"netease\">网易云</Select.Option>\n          <Select.Option value=\"qq\">QQ</Select.Option>\n          <Select.Option value=\"xiami\">虾米</Select.Option>\n          <Select.Option value=\"kuwo\">酷我</Select.Option>\n        </Select>\n      );\n    return (\n        <Form\n            className={style.formBody}\n            style={props.style}\n            {...layout}\n            name=\"basic\"\n            form={form}\n            initialValues={{ remember: true }}\n        >\n            <Form.Item label=\"\" name=\"keyword\">\n                <Input\n                    addonAfter={selectAfter}\n                    placeholder=\"please input something~\"\n                    onPressEnter={(\n                        event: React.KeyboardEvent<HTMLInputElement>\n                    ) => search(event)}\n                />\n            </Form.Item>\n        </Form>\n    );\n};\nexport default SongsForm;\n","import { Reducer, Action } from 'redux';\n\nexport enum ActionType {\n    UpdateName,\n    UpdateAddress,\n    DeleteName,\n    DeleteAddress,\n}\nexport interface IInitialState {\n    name: string;\n    address: string;\n}\n\nexport const initialState: IInitialState = {\n    name: '',\n    address: '',\n};\n\nexport interface IDispatchAction extends Action<ActionType> {\n    payload: Partial<IInitialState>;\n}\nexport const testReducer: Reducer<IInitialState, IDispatchAction> = (\n    state = initialState,\n    action\n) => {\n    switch (action.type) {\n        case ActionType.UpdateName:\n            return { ...state, name: action.payload.name || '' };\n        case ActionType.UpdateAddress:\n            return { ...state, address: action.payload.address || '' };\n        case ActionType.DeleteName:\n            return { ...state, name: '' };\n        case ActionType.DeleteAddress:\n            return { ...state, address: '' };\n        default:\n            return state;\n    }\n};\n","import React from 'react';\nimport { Route, RouteComponentProps, Redirect, Switch } from 'react-router-dom';\nimport { useAuth } from './view/common/Auth';\nimport HeaderLayout from '../src/view/common/header/Header';\n\ninterface IProps {\n    Component: React.FC<RouteComponentProps>;\n    path: string;\n    exact?: boolean;\n}\nconst PrivateRoute = ({ Component, ...rest }: IProps) => {\n    const { authTokens } = useAuth();\n    return (\n        <Switch>\n            <Route\n            {...rest}\n            render={(props) =>\n                authTokens ? (\n                    <HeaderLayout>\n                        <Component {...props} />\n                    </HeaderLayout>\n                ) : (\n                    <Redirect to={{ pathname: '/login', state: { referer: props.location } }} />\n                )\n            }\n        />\n        </Switch>\n    );\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { Tag } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\nimport { PlayCircleOutlined, DownloadOutlined } from '@ant-design/icons';\nimport { ISong } from '../../../redux/reducer/song';\nimport style from './songs-list.module.scss';\n\nexport const songsColumn: (width: number, play: (platform: string, id: string, name: string) => void, download: (platform: string, id: string, name: string) => void) => ColumnsType<ISong> = (\n    width,\n    play,\n    download\n) => {\n    return width > 600\n        ? [\n              {\n                  title: 'song-name',\n                  dataIndex: 'name',\n                  key: 'name',\n                  width: '17rem',\n                  render: (text: string, record: ISong) => (\n                      <a href={record.link} target=\"_blank\">\n                          {text}\n                      </a>\n                  ),\n              },\n              {\n                  title: 'singer-name',\n                  dataIndex: 'artists',\n                  key: 'artists',\n                  className: `${style.hide}`,\n                  render: (_text: string, record: ISong) => {\n                      return record.artists.map((item) => {\n                          const color = record.artists.length > 5 ? 'geekblue' : 'green';\n                          return (\n                              <Tag color={color} key={item.name}>\n                                  <a href={item.link} target=\"_blank\">\n                                      {item.name}\n                                  </a>\n                              </Tag>\n                          );\n                      });\n                  },\n              },\n              {\n                  title: 'album',\n                  dataIndex: 'album',\n                  key: 'album',\n                  className: `${style.hide}`,\n                  render: (_text: string, record: ISong) => (\n                      <Tag key={record.album.name}>\n                          <a href={record.album.link} target=\"_blank\">\n                              {record.album.name}\n                          </a>\n                      </Tag>\n                  ),\n              },\n              {\n                  title: 'platform',\n                  dataIndex: 'platform',\n                  key: 'platform',\n                  className: `${style.hide}`,\n              },\n              {\n                  title: 'operation',\n                  dataIndex: 'operation',\n                  key: 'operation',\n                  align: 'center',\n                  render: (_text: string, record: ISong) => (\n                      <div style={{ display: 'flex', justifyContent: 'space-around', fontSize: '20px' }}>\n                          <PlayCircleOutlined onClick={() => play(record.platform, record.originalId, record.name)} />\n                          <DownloadOutlined onClick={() => download(record.platform, record.originalId, record.name)} />\n                      </div>\n                  ),\n              },\n          ]\n        : [\n              {\n                  title: 'song-name',\n                  dataIndex: 'name',\n                  key: 'name',\n                  width: '17rem',\n                  render: (text: string, record: ISong) => (\n                      <div>\n                          <a href={record.link} target=\"_blank\">\n                              {text}\n                          </a>\n                          <br />\n                          {record.artists.map((item) => {\n                              const color = record.artists.length > 5 ? 'geekblue' : 'green';\n                              return (\n                                  <Tag color={color} key={item.name}>\n                                      <a href={item.link} target=\"_blank\">\n                                          {item.name}\n                                      </a>\n                                  </Tag>\n                              );\n                          })}\n                      </div>\n                  ),\n              },\n              {\n                  title: 'operation',\n                  dataIndex: 'operation',\n                  key: 'operation',\n                  align: 'center',\n                  render: (_text: string, record: ISong) => (\n                      <div style={{ display: 'flex', justifyContent: 'space-around', fontSize: '20px' }}>\n                          <PlayCircleOutlined onClick={() => play(record.platform, record.originalId, record.name)} />\n                          <DownloadOutlined onClick={() => download(record.platform, record.originalId, record.name)} />\n                      </div>\n                  ),\n              },\n          ];\n};\n","import React, { FC, useState, useEffect, SyntheticEvent } from 'react';\nimport { playSong } from '../../../service/songs';\nimport { Table, Skeleton, message, Button } from 'antd';\nimport { songsColumn } from './columns';\nimport ReactAudioPlayer from 'react-audio-player';\nimport style from './songs-list.module.scss';\nimport { ISong } from '../../../redux/reducer/song';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { SongDispatcher } from '../../../redux/action/songs';\nimport { RootState } from '../../../redux';\nimport { RouteComponentProps } from 'react-router';\nimport { PlayCircleOutlined } from '@ant-design/icons';\n\ninterface IProps {}\n\nexport interface ISongState {\n    songsList: ISong[];\n    total: number;\n    loading: boolean;\n}\n\nconst SongsList: FC<IProps & RouteComponentProps> = (props) => {\n    const params = new URLSearchParams(props.location.search);\n    const [currentSongUrl, setcurrentSongUrl] = useState('');\n    const [meted, setmeted] = useState(false);\n    const dispatcher = useDispatch();\n    const rootDispatcher = new SongDispatcher(dispatcher);\n    const [provider, setprovider] = useState(params.get('provider') || 'netease');\n    const [keyword, setkeyword] = useState(params.get('keyword') || 'ferrari');\n    const [page, setpage] = useState(Number(params.get('page')) || 1);\n    const [currentIndex, setcurrentIndex] = useState(0);\n    const [width, setwidth] = useState(1080);\n    const [currentList, setcurrentList] = useState<ISong[]>([]);\n    const [name, setname] = useState('');\n    const audioRef = React.createRef<ReactAudioPlayer>();\n    const [autoPlay, setautoPlay] = useState(false);\n\n    const { songsList, total, loading } = useSelector((state: RootState) => state.song);\n    useEffect(() => {\n        getWidth();\n        init(provider, keyword, page);\n    }, []);\n\n    const getWidth = () => {\n        const width = document.querySelector('body')?.offsetWidth;\n        setwidth(width!);\n    };\n    const init = (p: string, k: string, page: number) => {\n        rootDispatcher.getSongList({ provider: p, keyword: k, page });\n    };\n    const play = async (platform: string, id: string, name: string) => {\n        setautoPlay(true);\n        setname(name);\n        await playSong(platform, id)\n            .then((res) => {\n                setcurrentSongUrl(res.songSource);\n            })\n            .catch(() => {\n                message.error('获取播放信息失败，请重试');\n            });\n    };\n\n    const download = async (platform: string, id: string, name: string) => {\n        await playSong(platform, id)\n            .then((res) => {\n                if (navigator.platform.match(/Win|Linux|MAC/i)) {\n                    const a = document.createElement('a');\n                    a.setAttribute('href', res.songSource);\n                    a.setAttribute('target', '_blank');\n                    a.setAttribute('download', name);\n                    a.click();\n                } else {\n                    const myFrame= document.createElement('iframe');\n                    myFrame.src = res.songSource;\n                    myFrame.style.display = name;\n                    document.body.appendChild(myFrame);\n                }\n            })\n            .catch(() => {\n                message.error('获取播放信息失败，请重试');\n            });\n    };\n\n    const columns = songsColumn(width, play, download);\n\n    const changeSize = (page: number) => {\n        setpage(page);\n        init(provider, keyword, page);\n    };\n    const playAll = async () => {\n        setautoPlay(true);\n        setcurrentList(songsList);\n        play(provider, songsList[currentIndex].originalId, songsList[currentIndex].name);\n    };\n    const handleEnd = (_e: SyntheticEvent<HTMLAudioElement, Event>) => {\n        if (currentIndex < songsList.length - 1) {\n            setcurrentIndex(currentIndex + 1);\n            play(provider, songsList[currentIndex + 1].originalId, songsList[currentIndex + 1].name);\n        } else {\n            setname('');\n            setautoPlay(false);\n        }\n    };\n    return (\n        <div>\n            <Skeleton active loading={loading}>\n                <Button type=\"link\" className={style.playAll} icon={<PlayCircleOutlined />} onClick={() => playAll()}>播放全部</Button>\n                <Table\n                    columns={columns}\n                    dataSource={songsList}\n                    pagination={{ total, onChange: changeSize, showSizeChanger: false }}\n                />\n            </Skeleton>\n            <div className={style.player}>\n                {name && <div className={style.currentSong}>当前播放：{name}</div>}\n                <ReactAudioPlayer\n                    ref={audioRef}\n                    className={style.audio}\n                    src={currentSongUrl}\n                    autoPlay={autoPlay}\n                    controls\n                    onEnded={(e) => handleEnd(e)}\n                    muted={meted}\n                />\n            </div>\n        </div>\n    );\n};\nexport default SongsList;\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card } from 'antd';\nimport Meta from 'antd/lib/card/Meta';\nimport hotImg from '../../../src/static/img/WechatIMG1.jpeg';\nimport listImg from '../../../src/static/img/WechatIMG2.jpeg';\nimport style from './Home.module.scss';\n\nconst Home: FC = () => {\n    return (\n        <div className={style.body}>\n            <Card\n                hoverable\n                className={style.card}\n                cover={\n                    <img\n                        alt=\"hotImg\"\n                        src={hotImg}\n                    />\n                }\n            >\n                <Meta\n                    title={<Link to={'/list'}>songs list</Link>}\n                    description=\"Popular playlist\"\n                />\n            </Card>\n            <Card\n                hoverable\n                className={style.card}\n                cover={\n                    <img\n                        alt=\"listImg\"\n                        src={listImg}\n                    />\n                }\n            >\n                <Meta\n                    title={<Link to={'/hot'}>hot songs</Link>}\n                    description=\"Popular playlist\"\n                />\n            </Card>\n        </div>\n    );\n};\n\nexport default Home;\n","import React from 'react';\n\nconst SignUp = () => {\n    return <div>sign up</div>;\n};\nexport default SignUp;\n","import React, { FC, useState, useEffect, SyntheticEvent } from 'react';\nimport { playSong } from '../../../service/songs';\nimport { Table, Skeleton, Button, message } from 'antd';\nimport ReactAudioPlayer from 'react-audio-player';\nimport style from '../songs-list/songs-list.module.scss';\nimport { ISong } from '../../../redux/reducer/song';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { SongDispatcher } from '../../../redux/action/songs';\nimport { RootState } from '../../../redux';\nimport { songsColumn } from '../songs-list/columns';\nimport { RouteComponentProps } from 'react-router';\n\ninterface IProps {}\n\nexport interface ISongState {\n    songsList: ISong[];\n    total: number;\n    loading: boolean;\n}\n\nconst HotSongs: FC<IProps & RouteComponentProps> = (props) => {\n    const [currentSongUrl, setcurrentSongUrl] = useState('');\n    const [meted, setmeted] = useState(false);\n    const dispatcher = useDispatch();\n    const rootDispatcher = new SongDispatcher(dispatcher);\n    const [width, setwidth] = useState(1080);\n    const [autoPlay, setautoPlay] = useState(false);\n    const params = new URLSearchParams(props.location.search);\n    const [provider, setprovider] = useState(params.get('provider') || 'netease');\n    const [keyword, setkeyword] = useState(params.get('keyword') || 'ferrari');\n    const [page, setpage] = useState(Number(params.get('page')) || 1);\n    const [currentIndex, setcurrentIndex] = useState(0);\n\n    const { songsList, loading } = useSelector((state: RootState) => state.song);\n    useEffect(() => {\n        getWidth();\n        rootDispatcher.getHotSong();\n    }, []);\n\n    const play = async (platform: string, id: string) => {\n        const data = await playSong(platform, id);\n        setcurrentSongUrl(data.songSource);\n    };\n    const download = async (platform: string, id: string, name: string) => {\n        await playSong(platform, id)\n            .then((res) => {\n                if (navigator.platform.match(/Win|Linux|MAC/i)) {\n                    const a = document.createElement('a');\n                    a.setAttribute('href', res.songSource);\n                    a.setAttribute('target', '_blank');\n                    a.setAttribute('download', name);\n                    a.click();\n                } else {\n                    const myFrame= document.createElement('iframe');\n                    myFrame.src = res.songSource;\n                    myFrame.style.display = name;\n                    document.body.appendChild(myFrame);\n                }\n            })\n            .catch(() => {\n                message.error('获取播放信息失败，请重试');\n            });\n    };\n    const getWidth = () => {\n        const width = document.querySelector('body')?.offsetWidth;\n        setwidth(width!);\n    };\n    const playAll = async () => {\n        setautoPlay(true);\n        play(provider, songsList[currentIndex].originalId);\n    };\n    const handleEnd = (_e: SyntheticEvent<HTMLAudioElement, Event>) => {\n        if (currentIndex < songsList.length - 1) {\n            setcurrentIndex(currentIndex + 1);\n            play(provider, songsList[currentIndex + 1].originalId);\n        } else {\n            setautoPlay(false);\n        }\n    };\n    const columns = songsColumn(width, play, download);\n    return (\n        <div>\n            <Skeleton active loading={loading}>\n                <Button type=\"link\" onClick={() => playAll()}>播放全部</Button>\n                <Table columns={columns} dataSource={songsList} pagination={false} />\n            </Skeleton>\n            <div className={style.player}>\n                <ReactAudioPlayer\n                    src={currentSongUrl}\n                    autoPlay={autoPlay}\n                    className={style.audio}\n                    controls\n                    onEnded={(e) => handleEnd(e)}\n                    muted={meted}\n                    children={<Button type=\"link\">download</Button>}\n                />\n            </div>\n        </div>\n    );\n};\nexport default HotSongs;\n","import { Dispatch, Action } from 'redux';\nimport { ActionType } from '../reducer/test';\n\nexport interface IDispatchAction extends Action {\n    payload: Partial<any>;\n}\n\nexport class RootDispatcher {\n    private readonly dispatch: Dispatch<IDispatchAction>;\n\n    constructor(dispatch: Dispatch<IDispatchAction>) {\n        this.dispatch = dispatch;\n    }\n\n    updateName = async (name: string) => {\n        this.dispatch({ type: ActionType.UpdateName, payload: { name } });\n    }\n    updateAddress = (address: string) =>\n        this.dispatch({ type: ActionType.UpdateAddress, payload: { address } })\n    deleteName = () =>\n        this.dispatch({ type: ActionType.DeleteName, payload: {} })\n    deleteAddress = () =>\n        this.dispatch({ type: ActionType.DeleteAddress, payload: {} })\n}\n","import React, { FC } from 'react';\nimport { Input } from 'antd';\nimport { IInitialState } from '../../redux/reducer/test';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootDispatcher } from '../../redux/action/test';\n\ninterface IProps {}\ninterface IStateProps {\n    name: string;\n    address: string;\n}\n\ninterface IStateProps {\n    name: string;\n    address: string;\n}\n\nconst TextFoo: FC<IProps> = () => {\n    const { name, address } = useSelector<IInitialState, IStateProps>(\n        (state: IInitialState) => {\n            return {\n                name: state.name,\n                address: state.address,\n            };\n        }\n    );\n    const dispatch = useDispatch();\n    const rootDispatch = new RootDispatcher(dispatch);\n    return (\n        <div>\n            this is test page;\n            <Input\n                placeholder='name'\n                value={name}\n                onChange={(e) => {\n                    rootDispatch.updateName(e.target.value);\n                }}\n            />\n            <Input\n                placeholder='address'\n                value={address}\n                onChange={(e) => {\n                    rootDispatch.updateAddress(e.target.value);\n                }}\n            />\n        </div>\n    );\n};\n\nexport default TextFoo;\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Login from '../src/view/login/Login';\nimport { AuthContext } from './view/common/Auth';\nimport PrivateRoute from './PrivateRoute';\nimport SongsList from './view/pages/songs-list/songs-list';\nimport Home from './view/home/Home';\nimport SignUp from './view/sign-up/sign-up';\nimport HotSongs from './view/pages/hot-songs/hot-songs';\nimport TextFoo from './view/pages/test';\n\nconst App = () => {\n    const existingTokens = JSON.parse(localStorage.getItem('tokens')!);\n    const [authTokens, setAuthTokens] = useState(existingTokens);\n\n    const setTokens = (data: object) => {\n        localStorage.setItem('tokens', JSON.stringify(data));\n        setAuthTokens(data);\n    };\n    return (\n        <AuthContext.Provider value={{ authTokens, setAuthTokens: setTokens }}>\n            <Router>\n                <Switch>\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/signUp\" component={SignUp} />\n                    <PrivateRoute path=\"/\" Component={Home} />\n                </Switch>\n                <PrivateRoute path=\"/list\" Component={SongsList} />\n                <PrivateRoute path=\"/hot\" Component={HotSongs} />\n                <PrivateRoute path=\"/test\" Component={TextFoo} />\n            </Router>\n        </AuthContext.Provider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\n// import { userReducer } from './reducer/user';\nimport { testReducer } from './reducer/test';\nimport { songReducer } from './reducer/song';\n\nconst allReducer = {\n    // user: userReducer,\n    song: songReducer,\n    test: testReducer,\n};\nconst rootReducer = combineReducers(allReducer);\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport rootReducer from './reducer';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk, promiseMiddleware));\nexport type RootState = ReturnType<typeof rootReducer>;\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.module.scss';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"Header_layout__LeZNa\",\"avator\":\"Header_avator__nvnhF\",\"search\":\"Header_search___htFL\",\"content\":\"Header_content__3UTcU\",\"loginAvatar\":\"Header_loginAvatar__WQ4eH\"};"],"sourceRoot":""}