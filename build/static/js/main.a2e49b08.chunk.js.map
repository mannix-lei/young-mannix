{"version":3,"sources":["view/home/Home.module.scss","view/pages/news/news.module.scss","view/login/Login.module.scss","view/pages/songs/songs-form/songs-form.module.scss","static/img/troye.jpeg","static/img/WechatIMG2.jpeg","static/img/WechatIMG3.jpeg","view/pages/songs/songs-list/songs-list.module.scss","redux/reducer/city.ts","view/common/Auth.tsx","service/login.ts","utils/validators.ts","view/login/Login.tsx","service/index.ts","view/common/header/Header.tsx","service/city.ts","redux/action/city.ts","redux/reducer/song.ts","PrivateRoute.tsx","view/pages/songs/songs-list/columns.tsx","view/pages/songs/songs-form/songs-form.tsx","service/songs.ts","redux/action/songs.ts","view/pages/news/index.tsx","view/pages/songs/songs-list/songs-list.tsx","view/home/Home.tsx","view/sign-up/sign-up.tsx","view/pages/songs/hot-songs/hot-songs.tsx","view/pages/news/index.function.ts","service/news.ts","App.tsx","serviceWorker.ts","redux/reducer/news.ts","redux/reducer/test.ts","redux/reducer/loading.ts","redux/reducer.ts","redux/index.ts","index.tsx","view/common/header/Header.module.scss"],"names":["module","exports","CityActionType","AuthContext","createContext","authTokens","setAuthTokens","data","useAuth","useContext","login","name","password","remember","a","console","log","token","validEmail","type","message","layout","labelCol","span","Login","props","Form","useForm","form","useState","isLoggedIn","setLoggedIn","referer","location","state","setFieldsValue","email","localStorage","getItem","onFinish","values","setItem","to","pathname","className","style","body","config","count","zIndex","title","bordered","initialValues","store","Item","label","rules","required","Password","valuePropName","htmlType","initialState","cid","cip","cname","instance","Axios","create","baseURL","withCredentials","interceptors","request","use","err","Promise","reject","response","url","JSON","parse","match","status","notification","error","statusText","menuType","getCurrentCity","service","get","CityDispatcher","dispatch","getLocalCity","InitData","payload","this","Header","Layout","Content","Footer","SongActionType","HeaderLayout","dispatcher","useDispatch","rootDispatcher","useSelector","city","loading","Math","floor","random","avator","setavator","useEffect","search","onClick","window","href","loginAvatar","src","content","active","children","textAlign","PrivateRoute","Component","rest","render","songsColumn","width","play","download","dataIndex","key","text","record","link","target","hide","_TEXT","artists","map","item","color","length","album","align","display","justifyContent","fontSize","PlayCircleOutlined","DownloadOutlined","platform","originalId","initState","songsList","total","ProviderType","ListType","initSongsList","query","params","playSong","id","initHotSong","provider","SongDispatcher","getHotSong","p","then","res","GetHotSong","songs","totalCount","getSongList","GetSongList","NewsType","SongsForm","history","useHistory","URLSearchParams","网易云","setprovider","keyword","setkeyword","Number","page","热榜","搜索","val","info","sendHotQuery","replace","sendListQuery","selectAfter","defaultValue","onChange","value","handleSelectProvider","Option","QQ","虾米","酷我","formBody","Group","buttonStyle","e","Button","disabled","maxLength","addonAfter","placeholder","onPressEnter","event","currentTarget","SongsList","currentSongUrl","setcurrentSongUrl","meted","setpage","currentIndex","setcurrentIndex","setwidth","setname","audioRef","React","createRef","autoPlay","setautoPlay","singer","setsinger","song","getWidth","document","querySelector","offsetWidth","init","k","songSource","catch","columns","navigator","createElement","setAttribute","click","myFrame","appendChild","playAll","icon","dataSource","pagination","current","showSizeChanger","player","currentSong","songName","ref","audio","controls","onEnded","muted","Home","hoverable","card","cover","alt","songsImg","push","description","newsImg","nothing","SignUp","HotSongs","newsTypeList","getNewsList","post","NewsHome","settype","last_update","list","newsData","setnewsData","setloading","Date","toLocaleString","currentTime","setcurrentTime","initList","t","setInterval","clearTimeout","newsbody","handleChangeType","header","marginRight","source","marginLeft","itemLayout","renderItem","Meta","avatar","other","App","existingTokens","Provider","stringify","exact","path","component","Boolean","hostname","NewsActionType","ActionType","LoadingActionType","address","allReducer","action","test","UpdateName","UpdateAddress","DeleteName","DeleteAddress","news","InitList","setLoading","rootReducer","combineReducers","createStore","applyMiddleware","thunk","promiseMiddleware","ReactDOM","StrictMode","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a2e49b08.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Home_body__3JG4K\",\"card\":\"Home_card__2hkvf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"news_header__SBCQ2\",\"source\":\"news_source__3GTXY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Login_body__3ED08\",\"login\":\"Login_login__29f7P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formBody\":\"songs-form_formBody__otZWl\"};","module.exports = __webpack_public_path__ + \"static/media/troye.0d8d828a.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/WechatIMG2.45083ac7.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/WechatIMG3.55de156c.jpeg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"player\":\"songs-list_player__3ipZM\",\"audio\":\"songs-list_audio__1wHga\",\"currentSong\":\"songs-list_currentSong__36SQp\",\"playAll\":\"songs-list_playAll__9iW7K\",\"songName\":\"songs-list_songName__2SkCr\",\"provider\":\"songs-list_provider__1Bvry\",\"hide\":\"songs-list_hide__L1XyE\"};","import { Reducer, Action } from 'redux';\n\nexport enum CityActionType {\n    InitData,\n}\nexport interface IInitialState {\n    cid: string;\n    cip: string;\n    cname: string;\n}\n\nexport const initialState: IInitialState = {\n    cid: '',\n    cip: '',\n    cname: '',\n};\n\nexport interface IDispatchAction extends Action<CityActionType> {\n    payload: Partial<IInitialState>;\n}\nexport const cityReducer: Reducer<IInitialState, IDispatchAction> = (\n    state = initialState,\n    action\n) => {\n    switch (action.type) {\n        case CityActionType.InitData:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n};\n","import { createContext, useContext } from 'react';\n\nexport const AuthContext = createContext<{ authTokens: any; setAuthTokens: (data: object) => void }>({\n    authTokens: '',\n    setAuthTokens: (data: object) => {\n        return data;\n    },\n});\nexport const useAuth = () => {\n    return useContext(AuthContext);\n};\n","// import service from './index';\n\n/**\n * login\n * @param name\n * @param password\n */\nexport const login = async (name: string, password: string, remember: boolean) => {\n    console.log(name, password, remember);\n    \n    // return service.post('/login', { name, password, remember });\n    return {\n        token: '234234234',\n    };\n};\n","import { Rule } from 'antd/lib/form';\n\nexport const validEmail: Rule = {\n    type: 'email',\n    message: 'please input correct email',\n};\n","import React, { FC, useState } from 'react';\nimport { useAuth } from '../common/Auth';\nimport { Redirect } from 'react-router';\nimport { Card, Form, Input, Checkbox, Button } from 'antd';\nimport style from './Login.module.scss';\nimport ReactCanvasNest from 'react-canvas-nest';\nimport { login } from '../../service/login';\nimport { validEmail } from '../../utils/validators';\n\nconst layout = {\n    labelCol: { span: 5 },\n};\ninterface IProps {\n    [x: string]: any;\n}\nconst Login: FC = (props: IProps) => {\n    const [form] = Form.useForm();\n    const [isLoggedIn, setLoggedIn] = useState(false);\n    const { setAuthTokens } = useAuth();\n    const referer = ((props.location || {}).state || {}).referer || '/';\n\n    form.setFieldsValue({ email: localStorage.getItem('email'), password: localStorage.getItem('password') });\n\n    const onFinish = async (values: { email: string; password: string; remember: boolean }) => {\n        if (values.remember) {\n            localStorage.setItem('email', values.email);\n            localStorage.setItem('password', values.password);\n        } else {\n            localStorage.setItem('email', '');\n            localStorage.setItem('password', '');\n        }\n        const { token } = await login(values.email, values.password, values.remember);\n        setAuthTokens({ token });\n        setLoggedIn(true);\n    };\n\n    if (isLoggedIn) {\n        return <Redirect to={referer.pathname || '/'} />;\n    }\n\n    return (\n        <div className={style.body}>\n            <ReactCanvasNest config={{ count: 50 }} style={{ zIndex: 0 }} />\n            <Card title=\"Login\" bordered={false} className={style.login}>\n                <Form\n                    {...layout}\n                    form={form}\n                    name=\"basic\"\n                    initialValues={{ remember: true }}\n                    onFinish={(store) =>\n                        onFinish({ email: store.email, password: store.password, remember: store.remember })\n                    }\n                >\n                    <Form.Item\n                        label=\"E-mail\"\n                        name=\"email\"\n                        rules={[validEmail, { required: true, message: 'Please input your email!' }]}\n                    >\n                        <Input />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Password\"\n                        name=\"password\"\n                        rules={[{ required: true, message: 'Please input your password!' }]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n\n                    <Form.Item name=\"remember\" valuePropName=\"checked\">\n                        <Checkbox>Remember me</Checkbox>\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Submit\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Card>\n        </div>\n    );\n};\nexport default Login;\n","import Axios from 'axios';\nimport { notification } from 'antd';\n\nconst instance = Axios.create({\n    baseURL: '',\n    withCredentials: false,\n});\n\ninstance.interceptors.request.use(\n    (config) => {\n        return config;\n    },\n    (err) => {\n        return Promise.reject(err);\n    }\n);\n\ninstance.interceptors.response.use(\n    (response) => {\n        if (response.config.url === '/cityapi/cityjson') {\n            return JSON.parse(response.data.match(/{[^}{]*?}/g)[0]);\n        }\n        if (response.status === 200) {\n            return response.data.data;\n        } else {\n            notification.error({ message: response.statusText });\n            return Promise.reject(response.data);\n        }\n    },\n    (err) => {\n        return Promise.reject(err);\n    }\n);\n\nexport default instance;\n","import React, { FC, ReactNode, useEffect, useState } from 'react';\nimport { Layout, Avatar, Skeleton } from 'antd';\nimport style from './Header.module.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CityDispatcher } from '../../../redux/action/city';\nimport { RootState } from '../../../redux';\n\nconst { Header, Content, Footer } = Layout;\n\nexport enum menuType {\n    歌单 = 'songs-list',\n    最新音乐 = 'latest-list',\n}\n\ninterface IProps {\n    children?: ReactNode;\n}\nconst HeaderLayout: FC = (props: IProps) => {\n    const dispatcher = useDispatch();\n    const rootDispatcher = new CityDispatcher(dispatcher);\n    const { cip, cname } = useSelector((state: RootState) => state.city);\n    const { loading } = useSelector((state: RootState) => state.loading);\n    const [avator, setavator] = useState<number>(Math.floor(Math.random() * (5)) + 1);\n\n    useEffect(() => {\n        rootDispatcher.getLocalCity();\n    }, []);\n\n    return (\n        <Layout className={style.layout}>\n            <Header>\n                <div className={style.search}>\n                    <div className={style.avator} onClick={() => (window.location.href = '/')}></div>\n                </div>\n                <span>{cname}&nbsp;&nbsp;{cip}</span>\n                <span onClick={() => setavator(Math.floor(Math.random() * (5)) + 1)}>\n                    <Avatar className={style.loginAvatar} src={`http://api.rosysun.cn/sjtx/?type=${avator}`} />\n                </span>\n            </Header>\n            <Content className={style.content}>\n                <Skeleton active loading={loading}>\n                    <div className=\"site-layout-content\">{props.children}</div>\n                </Skeleton>\n            </Content>\n            <Footer style={{ textAlign: 'center' }}>Young Mannix ©2020 Created by Mannix Lei</Footer>\n        </Layout>\n    );\n};\n\nexport default HeaderLayout;\n","import service from './index';\n\n/**\n * login\n * @param name\n * @param password\n */\nexport const getCurrentCity = async () => {\n    return await service.get('/cityapi/cityjson');\n};\n","import { CityActionType } from './../reducer/city';\nimport { Dispatch, Action } from 'redux';\nimport { getCurrentCity } from '../../service/city';\n\nexport interface IDispatchAction extends Action {\n    payload: Partial<any>;\n}\n\nexport class CityDispatcher {\n    private readonly dispatch: Dispatch<IDispatchAction>;\n\n    constructor(dispatch: Dispatch<IDispatchAction>) {\n        this.dispatch = dispatch;\n    }\n\n    public getLocalCity = async () => {\n        const data = await getCurrentCity();\n        this.dispatch({ type: CityActionType.InitData, payload: { ...data }});\n    }\n}\n","import { Reducer, Action } from \"redux\";\n\nexport interface ISongForm {\n    provider: string;\n    keyword: string;\n    page: number;\n}\nexport interface ISong {\n    originalId: string;\n    name: string;\n    link: string;\n    mvLink: string;\n    artists: IAlbum[];\n    album: IAlbum;\n    hasCopyright: boolean;\n    fee: number;\n    platform: string;\n}\n\nexport interface IAlbum {\n    name: string;\n    link: string;\n}\n\nexport interface ISongInitial {\n    songsList: ISong[];\n    total: number;\n    loading: boolean;\n}\n\nconst initState: ISongInitial = {\n    songsList: [],\n    total: 0,\n    loading: true,\n};\n\nexport interface ISongQuery {\n    provider: string;\n    keyword: string;\n    page: number;\n}\n\nexport enum SongActionType {\n    GetSongList,\n    GetHotSong\n}\n\nexport interface ISongDispatchAction extends Action<SongActionType> {\n    payload: Partial<ISongInitial>;\n}\n\nexport const songReducer: Reducer<ISongInitial, ISongDispatchAction> = (\n    state = initState,\n    action\n): ISongInitial => {\n    switch (action.type) {\n        case SongActionType.GetSongList:\n            return {\n                songsList: action.payload.songsList!,\n                total: action.payload.total!,\n                loading: action.payload.loading!,\n            };\n        case SongActionType.GetHotSong:\n            return {\n                ...state,\n                songsList: action.payload.songsList!,\n                total: action.payload.total!,\n                loading: action.payload.loading!,\n            };\n        default:\n            return state;\n    }\n};\n","import React from 'react';\nimport { Route, RouteComponentProps, Redirect, Switch } from 'react-router-dom';\nimport { useAuth } from './view/common/Auth';\nimport HeaderLayout from '../src/view/common/header/Header';\n\ninterface IProps {\n    Component: React.FC<RouteComponentProps>;\n    path: string;\n    exact?: boolean;\n}\nconst PrivateRoute = ({ Component, ...rest }: IProps) => {\n    const { authTokens } = useAuth();\n    return (\n        <Switch>\n            <Route\n            {...rest}\n            render={(props) =>\n                authTokens ? (\n                    <HeaderLayout>\n                        <Component {...props} />\n                    </HeaderLayout>\n                ) : (\n                    <Redirect to={{ pathname: '/login', state: { referer: props.location } }} />\n                )\n            }\n        />\n        </Switch>\n    );\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { Tag } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\nimport { PlayCircleOutlined, DownloadOutlined } from '@ant-design/icons';\nimport style from './songs-list.module.scss';\nimport { ISong } from '../../../../redux/reducer/song';\n\nexport const songsColumn: (width: number, play: (item: ISong) => void, download: (platform: string, id: string, name: string) => void) => ColumnsType<ISong> = (\n    width,\n    play,\n    download\n) => {\n    return width > 600\n        ? [\n              {\n                  title: 'song-name',\n                  dataIndex: 'name',\n                  key: 'name',\n                  width: '17rem',\n                  render: (text: string, record: ISong) => (\n                      <a href={record.link} target=\"_blank\">\n                          {text}\n                      </a>\n                  ),\n              },\n              {\n                  title: 'singer-name',\n                  dataIndex: 'artists',\n                  key: 'artists',\n                  className: `${style.hide}`,\n                  render: (_TEXT: string, record: ISong) => {\n                      return record.artists.map((item) => {\n                          const color = record.artists.length > 5 ? 'geekblue' : 'green';\n                          return (\n                              <Tag color={color} key={item.name}>\n                                  <a href={item.link} target=\"_blank\">\n                                      {item.name}\n                                  </a>\n                              </Tag>\n                          );\n                      });\n                  },\n              },\n              {\n                  title: 'album',\n                  dataIndex: 'album',\n                  key: 'album',\n                  className: `${style.hide}`,\n                  render: (_TEXT: string, record: ISong) => (\n                      <Tag key={record.album.name}>\n                          <a href={record.album.link} target=\"_blank\">\n                              {record.album.name}\n                          </a>\n                      </Tag>\n                  ),\n              },\n              {\n                  title: 'platform',\n                  dataIndex: 'platform',\n                  key: 'platform',\n                  className: `${style.hide}`,\n              },\n              {\n                  title: 'operation',\n                  dataIndex: 'operation',\n                  key: 'operation',\n                  align: 'center',\n                  render: (_TEXT: string, record: ISong) => (\n                      <div style={{ display: 'flex', justifyContent: 'space-around', fontSize: '20px' }}>\n                          <PlayCircleOutlined onClick={() => play(record)} />\n                          <DownloadOutlined onClick={() => download(record.platform, record.originalId, record.name)} />\n                      </div>\n                  ),\n              },\n          ]\n        : [\n              {\n                  title: 'song-name',\n                  dataIndex: 'name',\n                  key: 'name',\n                  width: '17rem',\n                  render: (text: string, record: ISong) => (\n                      <div>\n                          <a href={record.link} target=\"_blank\">\n                              {text}\n                          </a>\n                          <br />\n                          {record.artists.map((item) => {\n                              const color = record.artists.length > 5 ? 'geekblue' : 'green';\n                              return (\n                                  <Tag color={color} key={item.name}>\n                                      <a href={item.link} target=\"_blank\">\n                                          {item.name}\n                                      </a>\n                                  </Tag>\n                              );\n                          })}\n                      </div>\n                  ),\n              },\n              {\n                  title: 'operation',\n                  dataIndex: 'operation',\n                  key: 'operation',\n                  align: 'center',\n                  render: (_TEXT: string, record: ISong) => (\n                      <div style={{ display: 'flex', justifyContent: 'space-around', fontSize: '20px' }}>\n                          <PlayCircleOutlined onClick={() => play(record)} />\n                          <DownloadOutlined onClick={() => download(record.platform, record.originalId, record.name)} />\n                      </div>\n                  ),\n              },\n          ];\n};\n","import React, { FC, useState, useEffect } from 'react';\nimport { Form, Input, message, Select, Radio } from 'antd';\nimport { useHistory } from 'react-router';\nimport style from './songs-form.module.scss';\nimport { ISongForm } from '../../../../redux/reducer/song';\nimport { Link } from 'react-router-dom';\n\nconst layout = {\n    labelCol: { span: 8 },\n};\nexport enum ProviderType {\n    '网易云' = 'netease',\n    'QQ' = 'qq',\n    '虾米' = 'xiami',\n    '酷我' = 'kuwo',\n}\nexport enum ListType {\n    '热榜' = 1,\n    '搜索' = 2,\n}\n\ninterface IProps {\n    style?: React.CSSProperties;\n    sendHotQuery?: (p: string) => void;\n    sendListQuery?: (query: ISongForm) => void;\n}\nconst SongsForm: FC<IProps> = (props) => {\n    const history = useHistory();\n    const params = new URLSearchParams(history.location.search);\n    const [form] = Form.useForm();\n    const [pathname, setpathname] = useState<string>(history.location.pathname);\n\n    const [provider, setprovider] = useState<string>(params.get('provider') || ProviderType.网易云);\n    const [keyword, setkeyword] = useState<string>(params.get('keyword') || 'sia'); // 当前搜索关键词\n    const [page, setpage] = useState<number>(Number(params.get('page')) || 1); // 页码\n    form.setFieldsValue({ keyword: params.get('keyword') });\n\n    useEffect(() => {\n        pathname === '/songs/hot' ? search(provider, ListType.热榜) : search(keyword, ListType.搜索);\n    }, []);\n\n    const search = async (val: string, type: ListType) => {\n        if (!val) {\n            message.info('please input something ~~');\n            return;\n        }\n        if (pathname === '/songs/hot') {\n            if (type === ListType.热榜) {\n                props.sendHotQuery?.(val);\n            } else {\n                history.replace(`/songs/list?provider=${provider}&keyword=${val}&page=1`);\n            }\n        } else {\n            props.sendListQuery?.({ provider, keyword: val, page });\n        }\n    };\n    const handleSelectProvider = (value: string) => {\n        setprovider(value);\n    };\n    const selectAfter = (\n        <Select defaultValue={provider} className=\"select-after\" onChange={(value) => handleSelectProvider(value)}>\n            <Select.Option value={ProviderType.网易云}>网易云</Select.Option>\n            <Select.Option value={ProviderType.QQ}>QQ</Select.Option>\n            <Select.Option value={ProviderType.虾米}>虾米</Select.Option>\n            <Select.Option value={ProviderType.酷我}>酷我</Select.Option>\n        </Select>\n    );\n    return (\n        <Form\n            className={style.formBody}\n            style={props.style}\n            {...layout}\n            name=\"basic\"\n            form={form}\n            initialValues={{ remember: true }}\n        >\n            {history.location.pathname === '/songs/hot' && (\n                <Form.Item label=\"\" name=\"provider\">\n                    <Radio.Group\n                        buttonStyle=\"solid\"\n                        defaultValue={provider}\n                        value={provider}\n                        onChange={(e) => {\n                            setprovider(e.target.value);\n                            search(e.target.value, ListType.热榜);\n                        }}\n                    >\n                        <Radio.Button value={ProviderType.网易云}>网易云</Radio.Button>\n                        <Radio.Button value={ProviderType.QQ}>QQ</Radio.Button>\n                        <Radio.Button value={ProviderType.虾米} disabled>\n                            虾米\n                        </Radio.Button>\n                        <Radio.Button value={ProviderType.酷我} disabled>\n                            酷我\n                        </Radio.Button>\n                    </Radio.Group>\n                </Form.Item>\n            )}\n            <Form.Item label=\"\" name=\"keyword\">\n                <Input\n                    maxLength={30}\n                    addonAfter={selectAfter}\n                    placeholder=\"please input something~\"\n                    onPressEnter={(event: React.KeyboardEvent<HTMLInputElement>) => {\n                        setkeyword(event.currentTarget.value);\n                        search(event.currentTarget.value, ListType.搜索);\n                    }}\n                />\n            </Form.Item>\n            {pathname === '/songs/list' && <Form.Item>\n                <Link to={'/songs/hot'}>前往热榜</Link>\n            </Form.Item>}\n        </Form>\n    );\n};\nexport default SongsForm;\n","import service from './index';\nimport { ISongQuery, ISong } from '../redux/reducer/song';\n\n/**\n * fetch song list\n * @param provider\n * @param keyword\n */\nexport const initSongsList = async (query: ISongQuery): Promise<{ songs: ISong[]; totalCount: number }> => {\n    return await service.get('/api/search', {\n        params: {\n            ...query,\n        },\n    });\n};\n\n/**\n * play song\n * @param platform\n * @param id\n */\nexport const playSong = async (platform: string, id: string): Promise<{ songSource: string }> => {\n    return await service.get(`/api/song_source/${platform}/${id}`);\n};\n\n/**\n * load hot songs\n */\nexport const initHotSong = async (provider: string): Promise<{ songs: ISong[]; totalCount: number }> => {\n    return await service.get(`/api/hot_list/${provider}`);\n};\n","import { Dispatch } from 'redux';\nimport {\n    ISongForm,\n    SongActionType,\n    ISongDispatchAction,\n} from '../reducer/song';\nimport { initHotSong, initSongsList } from '../../service/songs';\n\nexport class SongDispatcher {\n    private readonly dispatch: Dispatch<ISongDispatchAction>;\n\n    constructor(dispatch: Dispatch<ISongDispatchAction>) {\n        this.dispatch = dispatch;\n    }\n\n    public getHotSong = async (p: string) => {\n        await initHotSong(p).then((res) => {\n            this.dispatch({\n                type: SongActionType.GetHotSong,\n                payload: {\n                    songsList: res.songs,\n                    total: res.totalCount || res.songs.length,\n                    loading: false,\n                },\n            });\n        });\n    };\n    public getSongList = async (query: ISongForm) => {\n        await initSongsList(query).then((res) => {\n            this.dispatch({\n                type: SongActionType.GetSongList,\n                payload: {\n                    songsList: res.songs,\n                    total: res.totalCount || res.songs.length,\n                    loading: false,\n                },\n            });\n        });\n    };\n}\n","import React, { FC, useEffect, useState } from 'react';\nimport style from './news.module.scss';\nimport { List, Avatar, Divider, Button, Skeleton } from 'antd';\nimport { newsTypeList } from './index.function';\nimport { getNewsList } from '../../../service/news';\nimport { IInitialState } from '../../../redux/reducer/news';\nimport { useHistory } from 'react-router-dom';\n\nexport enum NewsType {\n    'zhihu' = '知乎热榜',\n    'weibo' = '微博热搜',\n    'weixin' = '微信 ‧ 24h热文榜,',\n    'baidu' = '百度 ‧ 实时热点',\n    'toutiao' = '今日头条',\n    '\"163\"' = '网易新闻',\n    'xl' = '新浪网 ‧ 热词排行榜',\n    '36k' = '36氪 ‧ 24小时热榜(默认)',\n    'hitory' = '历史上的今天',\n    'sspai' = '少数派',\n    'csdn' = '**csdn **今日推荐',\n    'juejin' = '掘金热榜',\n    'bilibili' = '哔哩哔哩热榜',\n    'douyin' = '抖音视频榜',\n    '52pojie' = '吾爱破解热榜',\n    'v2ex' = 'V2ex 热帖',\n    'hostloc' = '全球主机论坛热帖',\n}\n\nexport interface INewsType {\n    key: string;\n    value: string;\n}\n\nconst NewsHome: FC = () => {\n    const history = useHistory();\n    const params = new URLSearchParams(history.location.search);\n    const [type, settype] = useState<string>(params.get('type') || 'zhihu');\n    const [newsData, setnewsData] = useState<IInitialState>({ last_update: '', name: '', list: [] });\n    const [loading, setloading] = useState<boolean>(false);\n    const [currentTime, setcurrentTime] = useState(new Date().toLocaleString());\n\n    useEffect(() => {\n        initList(type);\n        const t = setInterval(() => {\n            setcurrentTime(new Date().toLocaleString());\n        }, 1000);\n\n        return () => {\n            clearTimeout(t);\n        };\n    }, []);\n\n    const initList = async (type: string) => {\n        setloading(true);\n        history.replace(`/news?type=${type}`);\n        await getNewsList(type)\n            .then((res) => {\n                setnewsData(res);\n                setloading(false);\n            })\n            .catch(() => {\n                setloading(false);\n            });\n    };\n\n    const handleChangeType = (type: string) => {\n        settype(type);\n        initList(type);\n    };\n\n    return (\n        <div className={style.newsbody}>\n            <div>\n                {newsTypeList.map((item) => (\n                    <span>\n                        <Button type=\"link\" disabled={loading} onClick={() => handleChangeType(item.key)}>\n                            {item.value}\n                        </Button>\n                        <Divider type=\"vertical\" />\n                    </span>\n                ))}\n            </div>\n            <div className={style.header}>\n                <div style={{ marginRight: '3rem' }}>更新时间: {newsData.last_update}</div>\n                <div>\n                    来自: <span className={style.source}>{newsData.name}</span>\n                </div>\n                <div style={{ marginLeft: '3rem' }}>当前时间: {currentTime}</div>\n            </div>\n            <Skeleton active loading={loading}>\n                <List\n                    itemLayout=\"horizontal\"\n                    dataSource={newsData.list}\n                    renderItem={(item) => (\n                        <List.Item>\n                            <List.Item.Meta\n                                avatar={\n                                    <Avatar\n                                        src={`http://api.rosysun.cn/sjtx/?type=${Math.floor(Math.random() * 5) + 1}`}\n                                    />\n                                }\n                                title={\n                                    <a href={item.link} target=\"_blank\">\n                                        {item.title}\n                                    </a>\n                                }\n                                description={item.other}\n                            />\n                        </List.Item>\n                    )}\n                />\n            </Skeleton>\n        </div>\n    );\n};\nexport default NewsHome;\n","import React, { FC, useState, useEffect, SyntheticEvent } from 'react';\nimport { Table, Skeleton, message, Button } from 'antd';\nimport { songsColumn } from './columns';\nimport ReactAudioPlayer from 'react-audio-player';\nimport style from './songs-list.module.scss';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RouteComponentProps, useHistory } from 'react-router';\nimport { PlayCircleOutlined } from '@ant-design/icons';\nimport { ISong, ISongForm, IAlbum } from '../../../../redux/reducer/song';\nimport { SongDispatcher } from '../../../../redux/action/songs';\nimport { RootState } from '../../../../redux';\nimport { playSong } from '../../../../service/songs';\nimport SongsForm, { ProviderType } from '../songs-form/songs-form';\n\ninterface IProps {}\n\nexport interface ISongState {\n    songsList: ISong[];\n    total: number;\n    loading: boolean;\n}\n\nconst SongsList: FC<IProps & RouteComponentProps> = () => {\n    const history = useHistory();\n    const [currentSongUrl, setcurrentSongUrl] = useState('');\n    const [meted, setmeted] = useState(false);\n    const dispatcher = useDispatch();\n    const rootDispatcher = new SongDispatcher(dispatcher);\n    const params = new URLSearchParams(history.location.search);\n    const [provider, setprovider] = useState<string>(params.get('provider') || ProviderType.网易云);\n    const [keyword, setkeyword] = useState<string>(params.get('keyword') || 'sia'); // 当前搜索关键词\n    const [page, setpage] = useState<number>(Number(params.get('page')) || 1); // 页码\n\n    const [currentIndex, setcurrentIndex] = useState(0);\n    const [width, setwidth] = useState(1080);\n    const [name, setname] = useState('');\n    const audioRef = React.createRef<ReactAudioPlayer>();\n    const [autoPlay, setautoPlay] = useState(false);\n    const [singer, setsinger] = useState<IAlbum[]>([]); // 歌手名字\n\n    const { songsList, total, loading } = useSelector((state: RootState) => state.song);\n    useEffect(() => {\n        getWidth();\n    }, []);\n\n    const getWidth = () => {\n        const width = document.querySelector('body')?.offsetWidth;\n        setwidth(width!);\n    };\n    const init = (p: string, k: string, page: number) => {\n        setkeyword(k);\n        setprovider(p);\n        setpage(page);\n        rootDispatcher.getSongList({ provider: p, keyword: k, page });\n    };\n    const play = async (record: ISong) => {\n        setautoPlay(true);\n        setsinger(record.artists);\n        setname(record.name);\n        await playSong(record.platform, record.originalId)\n            .then((res) => {\n                setcurrentSongUrl(res.songSource);\n            })\n            .catch(() => {\n                message.error('获取播放信息失败，请重试');\n            });\n    };\n\n    const download = async (platform: string, id: string, name: string) => {\n        await playSong(platform, id)\n            .then((res) => {\n                if (navigator.platform.match(/Win|Linux|MAC/i)) {\n                    const a = document.createElement('a');\n                    a.setAttribute('href', res.songSource);\n                    a.setAttribute('target', '_blank');\n                    a.setAttribute('download', name);\n                    a.click();\n                } else {\n                    const myFrame= document.createElement('iframe');\n                    myFrame.src = res.songSource;\n                    myFrame.style.display = name;\n                    document.body.appendChild(myFrame);\n                }\n            })\n            .catch(() => {\n                message.error('获取播放信息失败，请重试');\n            });\n    };\n\n    const columns = songsColumn(width, play, download);\n\n    const changeSize = (page: number) => {\n        setpage(page);\n        init(provider, keyword, page);\n    };\n    const playAll = async () => {\n        setautoPlay(true);\n        play(songsList[currentIndex]);\n    };\n    const handleEnd = (_e: SyntheticEvent<HTMLAudioElement, Event>) => {\n        if (currentIndex < songsList.length - 1) {\n            setcurrentIndex(currentIndex + 1);\n            play(songsList[currentIndex + 1]);\n        } else {\n            setname('');\n            setcurrentIndex(0);\n            setautoPlay(false);\n        }\n    };\n    const receiveQuery = (form: ISongForm) => {\n        history.replace(`/songs/list?provider=${form.provider}&keyword=${form.keyword}&page=1`);\n        init(form.provider, form.keyword, form.page);\n    };\n    return (\n        <div>\n            <Skeleton active loading={loading}>\n                <SongsForm sendListQuery={receiveQuery}/>\n                <Button type=\"link\" className={style.playAll} icon={<PlayCircleOutlined />} onClick={() => playAll()}>播放全部</Button>\n                <Table\n                    columns={columns}\n                    dataSource={songsList}\n                    pagination={{ current: page, total, onChange: changeSize, showSizeChanger: false }}\n                />\n            </Skeleton>\n            <div className={style.player}>\n                <div className={style.currentSong}>\n                    <span className={style.songName}>{name}</span>\n                    {singer.map((item) => item.name + ' ')}\n                </div>\n                <ReactAudioPlayer\n                    ref={audioRef}\n                    className={style.audio}\n                    src={currentSongUrl}\n                    autoPlay={autoPlay}\n                    controls\n                    onEnded={(e) => handleEnd(e)}\n                    muted={meted}\n                />\n                {currentSongUrl && <div className={style.provider}>{provider}</div>}\n            </div>\n        </div>\n    );\n};\nexport default SongsList;\n","import React, { FC } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Card } from 'antd';\nimport Meta from 'antd/lib/card/Meta';\nimport songsImg from '../../../src/static/img/troye.jpeg';\nimport newsImg from '../../../src/static/img/WechatIMG2.jpeg';\nimport nothing from '../../../src/static/img/WechatIMG3.jpeg';\nimport style from './Home.module.scss';\n\nconst Home: FC = () => {\n    const history = useHistory();\n    return (\n        <div className={style.body}>\n            <Card hoverable className={style.card} cover={<img alt=\"hotImg\" src={songsImg} />} onClick={() => history.push('/songs/hot')}>\n                <Meta title={<Link to={'/songs/hot'}>听会歌～</Link>} description=\"Popular playlist\" />\n            </Card>\n            <Card hoverable className={style.card} cover={<img alt=\"listImg\" src={newsImg} />} onClick={() => history.push('/news')}>\n                <Meta title={<Link to={'/news'}>看会新闻~</Link>} description=\"Popular news\" />\n            </Card>\n            <Card hoverable className={style.card} cover={<img alt=\"listImg\" src={nothing} />} onClick={() => history.push('')}>\n                <Meta title={<Link to={''}>后续板块陆续开启～</Link>} description=\"敬请期待。。。\" />\n            </Card>\n        </div>\n    );\n};\n\nexport default Home;\n","import React from 'react';\n\nconst SignUp = () => {\n    return <div>sign up</div>;\n};\nexport default SignUp;\n","import React, { FC, useState, SyntheticEvent, useEffect } from 'react';\nimport { Table, Skeleton, Button, message } from 'antd';\nimport ReactAudioPlayer from 'react-audio-player';\nimport style from '../songs-list/songs-list.module.scss';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { songsColumn } from '../songs-list/columns';\nimport { RouteComponentProps, useHistory } from 'react-router';\nimport { PlayCircleOutlined } from '@ant-design/icons';\nimport { ISong, IAlbum } from '../../../../redux/reducer/song';\nimport { SongDispatcher } from '../../../../redux/action/songs';\nimport { RootState } from '../../../../redux';\nimport { playSong } from '../../../../service/songs';\nimport SongsForm from '../songs-form/songs-form';\n\ninterface IProps {}\n\nexport interface ISongState {\n    songsList: ISong[];\n    total: number;\n    loading: boolean;\n}\n\nconst HotSongs: FC<IProps & RouteComponentProps> = () => {\n    const history = useHistory();\n    const [currentSongUrl, setcurrentSongUrl] = useState('');\n    const [meted, setmeted] = useState<boolean>(false);\n    const dispatcher = useDispatch();\n    const rootDispatcher = new SongDispatcher(dispatcher);\n    const [width, setwidth] = useState<number>(1080);\n    const [autoPlay, setautoPlay] = useState<boolean>(false);\n\n    const [provider, setprovider] = useState<string>(''); // 当前平\n    const [keyword, setkeyword] = useState<string>(''); // 当前搜索关键词\n    const [page, setpage] = useState<number>(1); // 页码\n    const [currentIndex, setcurrentIndex] = useState(0); // 当前索引\n\n    const [name, setname] = useState<string>(''); // 当前歌名\n    const [time, settime] = useState<number>(0); // 累计听歌时间\n    const [singer, setsinger] = useState<IAlbum[]>([]); // 歌手名字\n\n    const { songsList, loading } = useSelector((state: RootState) => state.song);\n\n    useEffect(() => {\n        getWidth();\n    }, []);\n    const play = async (record: ISong) => {\n        setname(record.name);\n        setsinger(record.artists);\n        const data = await playSong(record.platform, record.originalId);\n        setcurrentSongUrl(data.songSource);\n    };\n    const download = async (platform: string, id: string, name: string) => {\n        await playSong(platform, id)\n            .then((res) => {\n                if (navigator.platform.match(/Win|Linux|MAC/i)) {\n                    const a = document.createElement('a');\n                    a.setAttribute('href', res.songSource);\n                    a.setAttribute('target', '_blank');\n                    a.setAttribute('download', name);\n                    a.click();\n                } else {\n                    const myFrame= document.createElement('iframe');\n                    myFrame.src = res.songSource;\n                    myFrame.style.display = name;\n                    document.body.appendChild(myFrame);\n                }\n            })\n            .catch(() => {\n                message.error('获取播放信息失败，请重试');\n            });\n    };\n    const getWidth = () => {\n        const width = document.querySelector('body')?.offsetWidth;\n        setwidth(width!);\n    };\n    const playAll = async () => {\n        setautoPlay(true);\n        play(songsList[currentIndex]);\n    };\n    const handleEnd = (_e: SyntheticEvent<HTMLAudioElement, Event>) => {\n        if (currentIndex < songsList.length - 1) {\n            setcurrentIndex(currentIndex + 1);\n            play(songsList[currentIndex + 1]);\n        } else {\n            setautoPlay(false);\n            setname('');\n            setcurrentIndex(0);\n        }\n    };\n    const receiveQuery = (val: string) => {\n        history.replace(`/songs/hot?provider=${val}`);\n        setprovider(val);\n        rootDispatcher.getHotSong(val);\n    };\n    const columns = songsColumn(width, play, download);\n    return (\n        <div>\n            <SongsForm sendHotQuery={receiveQuery}/>\n            <Skeleton active loading={loading}>\n            <div>\n                <Button type=\"link\" className={style.playAll} icon={<PlayCircleOutlined />} onClick={() => playAll()}>播放全部</Button>\n                {/* <span>累计听歌时间：{time}</span> */}\n            </div>\n                <Table columns={columns} dataSource={songsList} pagination={false} />\n            </Skeleton>\n            <div className={style.player}>\n                <div className={style.currentSong}>\n                    <span className={style.songName}>{name}</span>\n                    {singer.map(item => item.name + ' ')}\n                </div>\n                <ReactAudioPlayer\n                    src={currentSongUrl}\n                    autoPlay={autoPlay}\n                    className={style.audio}\n                    controls\n                    onEnded={(e) => handleEnd(e)}\n                    muted={meted}\n                    children={<Button type=\"link\">download</Button>}\n                />\n                <div className={style.provider}>{provider}</div>\n            </div>\n        </div>\n    );\n};\nexport default HotSongs;\n","import { INewsType } from '.';\n\nexport const newsTypeList: INewsType[] = [\n    {\n        key: 'zhihu',\n        value: '知乎热榜',\n    },\n    {\n        key: 'weibo',\n        value: '微博热搜',\n    },\n    {\n        key: 'weixin',\n        value: '微信 ‧ 24h热文榜',\n    },\n    {\n        key: 'baidu',\n        value: '百度 ‧ 实时热点',\n    },\n    {\n        key: 'toutiao',\n        value: '今日头条',\n    },\n    {\n        key: '163',\n        value: '网易新闻',\n    },\n    {\n        key: 'xl',\n        value: '新浪网 ‧ 热词排行榜',\n    },\n    {\n        key: '36k',\n        value: '36氪 ‧ 24小时热榜(默认)',\n    },\n    {\n        key: 'hitory',\n        value: '历史上的今天',\n    },\n    {\n        key: 'sspai',\n        value: '少数派',\n    },\n    {\n        key: 'csdn',\n        value: '**csdn **今日推荐',\n    },\n    {\n        key: 'juejin',\n        value: '掘金热榜',\n    },\n    {\n        key: 'bilibili',\n        value: '哔哩哔哩热榜',\n    },\n    {\n        key: 'douyin',\n        value: '抖音视频榜',\n    },\n    {\n        key: '52pojie',\n        value: '吾爱破解热榜',\n    },\n    {\n        key: 'v2ex',\n        value: 'V2ex 热帖',\n    },\n    {\n        key: 'hostloc',\n        value: '全球主机论坛热帖',\n    },\n];\n","import service from './index';\nimport { IInitialState } from '../redux/reducer/news';\n\nexport const getNewsList = async (type: string): Promise<IInitialState> => {\n    return await service.post('/newsapi/tophub/get', { type });\n};\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Login from '../src/view/login/Login';\nimport { AuthContext } from './view/common/Auth';\nimport PrivateRoute from './PrivateRoute';\nimport SongsList from './view/pages/songs/songs-list/songs-list';\nimport Home from './view/home/Home';\nimport SignUp from './view/sign-up/sign-up';\nimport HotSongs from './view/pages/songs/hot-songs/hot-songs';\nimport NewsHome from './view/pages/news/index';\n\nconst App = () => {\n    const existingTokens = JSON.parse(localStorage.getItem('tokens')!);\n    const [authTokens, setAuthTokens] = useState(existingTokens);\n\n    const setTokens = (data: object) => {\n        localStorage.setItem('tokens', JSON.stringify(data));\n        setAuthTokens(data);\n    };\n    return (\n        <AuthContext.Provider value={{ authTokens, setAuthTokens: setTokens }}>\n            <Router>\n                <Switch>\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/signUp\" component={SignUp} />\n                    <PrivateRoute path=\"/\" Component={Home} />\n                </Switch>\n                <PrivateRoute path=\"/songs/list\" Component={SongsList} />\n                <PrivateRoute path=\"/songs/hot\" Component={HotSongs} />\n\n                <PrivateRoute path=\"/news\" Component={NewsHome} />\n            </Router>\n        </AuthContext.Provider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { Reducer, Action } from 'redux';\n\nexport enum NewsActionType {\n    InitList,\n}\nexport interface IInitialState {\n    last_update: string;\n    name: string;\n    list: Array<{ title: string, link: string, other: string }>;\n}\n\nexport const initialState: IInitialState = {\n    last_update: '',\n    name: '',\n    list: [],\n};\n\nexport interface IDispatchAction extends Action<NewsActionType> {\n    payload: Partial<IInitialState>;\n}\nexport const newsReducer: Reducer<IInitialState, IDispatchAction> = (\n    state = initialState,\n    action\n) => {\n    switch (action.type) {\n        case NewsActionType.InitList:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n};\n","import { Reducer, Action } from 'redux';\n\nexport enum ActionType {\n    UpdateName,\n    UpdateAddress,\n    DeleteName,\n    DeleteAddress,\n}\nexport interface IInitialState {\n    name: string;\n    address: string;\n}\n\nexport const initialState: IInitialState = {\n    name: '',\n    address: '',\n};\n\nexport interface IDispatchAction extends Action<ActionType> {\n    payload: Partial<IInitialState>;\n}\nexport const testReducer: Reducer<IInitialState, IDispatchAction> = (\n    state = initialState,\n    action\n) => {\n    switch (action.type) {\n        case ActionType.UpdateName:\n            return { ...state, name: action.payload.name || '' };\n        case ActionType.UpdateAddress:\n            return { ...state, address: action.payload.address || '' };\n        case ActionType.DeleteName:\n            return { ...state, name: '' };\n        case ActionType.DeleteAddress:\n            return { ...state, address: '' };\n        default:\n            return state;\n    }\n};\n","import { Reducer, Action } from 'redux';\n\nexport enum LoadingActionType {\n    setLoading,\n}\nexport interface IInitialState {\n    loading: boolean;\n}\n\nexport const initialState: IInitialState = {\n    loading: false,\n};\n\nexport interface IDispatchAction extends Action<LoadingActionType> {\n    payload: Partial<IInitialState>;\n}\nexport const loadingReducer: Reducer<IInitialState, IDispatchAction> = (\n    state = initialState,\n    action\n) => {\n    switch (action.type) {\n        case LoadingActionType.setLoading:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n};\n","import { newsReducer } from './reducer/news';\nimport { combineReducers } from 'redux';\n// import { userReducer } from './reducer/user';\nimport { testReducer } from './reducer/test';\nimport { songReducer } from './reducer/song';\nimport { cityReducer } from './reducer/city';\nimport { loadingReducer } from './reducer/loading';\n\nconst allReducer = {\n    // user: userReducer,\n    song: songReducer,\n    test: testReducer,\n    city: cityReducer,\n    news: newsReducer,\n    loading: loadingReducer,\n};\nconst rootReducer = combineReducers(allReducer);\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport rootReducer from './reducer';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk, promiseMiddleware));\nexport type RootState = ReturnType<typeof rootReducer>;\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.module.scss';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"Header_layout__LeZNa\",\"avator\":\"Header_avator__nvnhF\",\"search\":\"Header_search___htFL\",\"content\":\"Header_content__3UTcU\",\"loginAvatar\":\"Header_loginAvatar__WQ4eH\"};"],"sourceRoot":""}