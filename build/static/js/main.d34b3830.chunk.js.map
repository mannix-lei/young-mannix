{"version":3,"sources":["view/home/Home.module.scss","view/pages/news/news.module.scss","view/login/Login.module.scss","view/pages/songs/songs-form/songs-form.module.scss","static/img/troye.jpeg","static/img/WechatIMG2.jpeg","static/img/WechatIMG3.jpeg","view/pages/songs/songs-list/songs-list.module.scss","redux/reducer/city.ts","view/common/Auth.tsx","service/login.ts","utils/validators.ts","view/login/Login.tsx","service/index.ts","view/common/header/Header.tsx","service/city.ts","redux/action/city.ts","view/pages/songs/songs-form/songs-form.tsx","PrivateRoute.tsx","view/pages/songs/songs-list/columns.tsx","service/songs.ts","view/pages/news/index.tsx","view/pages/songs/songs-list/songs-list.tsx","view/home/Home.tsx","view/sign-up/sign-up.tsx","view/pages/songs/hot-songs/hot-songs.tsx","view/pages/news/index.function.ts","service/news.ts","App.tsx","serviceWorker.ts","redux/reducer/news.ts","redux/reducer/test.ts","redux/reducer/song.ts","redux/reducer/loading.ts","redux/reducer.ts","redux/index.ts","index.tsx","view/common/header/Header.module.scss"],"names":["module","exports","CityActionType","AuthContext","createContext","authTokens","setAuthTokens","data","useAuth","useContext","login","name","password","remember","a","console","log","token","validEmail","type","message","layout","labelCol","span","Login","props","Form","useForm","form","useState","isLoggedIn","setLoggedIn","referer","location","state","setFieldsValue","email","localStorage","getItem","onFinish","values","setItem","to","pathname","className","style","body","config","count","zIndex","title","bordered","initialValues","store","Item","label","rules","required","Password","valuePropName","htmlType","initialState","cid","cip","cname","instance","Axios","create","baseURL","withCredentials","interceptors","request","use","NProgress","start","err","done","Promise","reject","response","url","JSON","parse","match","status","notification","error","statusText","menuType","getCurrentCity","service","get","CityDispatcher","dispatch","getLocalCity","InitData","payload","this","Header","Layout","Content","Footer","ProviderType","ListType","HeaderLayout","dispatcher","useDispatch","rootDispatcher","useSelector","city","Math","floor","random","avator","setavator","useEffect","search","onClick","window","href","loginAvatar","src","content","children","textAlign","PrivateRoute","Component","rest","render","songsColumn","width","play","download","_TEXT","record","index","playing","PlayCircleFilled","palying","dataIndex","key","text","link","target","hide","artists","map","item","color","length","album","align","display","justifyContent","fontSize","PlayCircleOutlined","DownloadOutlined","platform","originalId","initSongsList","query","params","playSong","id","initHotSong","provider","NewsType","SongsForm","history","useHistory","URLSearchParams","网易云","setprovider","keyword","setkeyword","Number","page","热榜","搜索","val","info","sendHotQuery","replace","sendListQuery","selectAfter","defaultValue","disabled","inputDisable","onChange","value","handleSelectProvider","Option","QQ","虾米","酷我","formBody","Group","tabDisable","buttonStyle","e","Button","maxLength","addonAfter","placeholder","onPressEnter","event","currentTarget","SongsList","currentSongUrl","setcurrentSongUrl","setpage","currentIndex","setcurrentIndex","setwidth","setname","autoPlay","setautoPlay","singer","setsinger","loading","setloading","list","setlist","total","settotal","getWidth","document","querySelector","offsetWidth","init","p","k","then","res","songs","totalCount","catch","tempList","findIndex","songSource","setInterval","marquee","columns","navigator","createElement","setAttribute","click","myFrame","appendChild","playAll","box","getElementById","songName","singername","offsetLeft","scrollLeft","clientWidth","active","icon","dataSource","pagination","current","showSizeChanger","player","overflow","position","left","currentSong","float","marginLeft","lineHeight","audio","controls","onEnded","_e","handleEnd","Home","hoverable","card","cover","alt","songsImg","push","description","newsImg","nothing","SignUp","HotSongs","songsList","setsongsList","initList","newsTypeList","getNewsList","post","NewsHome","settype","last_update","newsData","setnewsData","Date","toLocaleString","currentTime","setcurrentTime","t","clearTimeout","newsbody","handleChangeType","header","marginRight","source","itemLayout","renderItem","Meta","avatar","other","App","existingTokens","Provider","stringify","exact","path","component","Boolean","hostname","NewsActionType","ActionType","SongActionType","address","initState","LoadingActionType","allReducer","song","action","GetSongList","GetHotSong","test","UpdateName","UpdateAddress","DeleteName","DeleteAddress","news","InitList","startLoading","stopLoading","rootReducer","combineReducers","createStore","applyMiddleware","thunk","promiseMiddleware","ReactDOM","StrictMode","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d34b3830.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Home_body__3JG4K\",\"card\":\"Home_card__2hkvf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"news_header__SBCQ2\",\"source\":\"news_source__3GTXY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Login_body__3ED08\",\"login\":\"Login_login__29f7P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formBody\":\"songs-form_formBody__otZWl\"};","module.exports = __webpack_public_path__ + \"static/media/troye.0d8d828a.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/WechatIMG2.45083ac7.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/WechatIMG3.55de156c.jpeg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"songs-list_body__Q3hMV\",\"player\":\"songs-list_player__3ipZM\",\"audio\":\"songs-list_audio__1wHga\",\"currentSong\":\"songs-list_currentSong__36SQp\",\"playAll\":\"songs-list_playAll__9iW7K\",\"songName\":\"songs-list_songName__2SkCr\",\"provider\":\"songs-list_provider__1Bvry\",\"palying\":\"songs-list_palying__1TNAL\",\"rotating\":\"songs-list_rotating__r5_aS\",\"hide\":\"songs-list_hide__L1XyE\"};","import { Reducer, Action } from 'redux';\n\nexport enum CityActionType {\n    InitData,\n}\nexport interface IInitialState {\n    cid: string;\n    cip: string;\n    cname: string;\n}\n\nexport const initialState: IInitialState = {\n    cid: '',\n    cip: '',\n    cname: '',\n};\n\nexport interface IDispatchAction extends Action<CityActionType> {\n    payload: Partial<IInitialState>;\n}\nexport const cityReducer: Reducer<IInitialState, IDispatchAction> = (\n    state = initialState,\n    action\n) => {\n    switch (action.type) {\n        case CityActionType.InitData:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n};\n","import { createContext, useContext } from 'react';\n\nexport const AuthContext = createContext<{ authTokens: any; setAuthTokens: (data: object) => void }>({\n    authTokens: '',\n    setAuthTokens: (data: object) => {\n        return data;\n    },\n});\nexport const useAuth = () => {\n    return useContext(AuthContext);\n};\n","// import service from './index';\n\n/**\n * login\n * @param name\n * @param password\n */\nexport const login = async (name: string, password: string, remember: boolean) => {\n    console.log(name, password, remember);\n    \n    // return service.post('/login', { name, password, remember });\n    return {\n        token: '234234234',\n    };\n};\n","import { Rule } from 'antd/lib/form';\n\nexport const validEmail: Rule = {\n    type: 'email',\n    message: 'please input correct email',\n};\n","import React, { FC, useState } from 'react';\nimport { useAuth } from '../common/Auth';\nimport { Redirect } from 'react-router';\nimport { Card, Form, Input, Checkbox, Button } from 'antd';\nimport style from './Login.module.scss';\nimport ReactCanvasNest from 'react-canvas-nest';\nimport { login } from '../../service/login';\nimport { validEmail } from '../../utils/validators';\n\nconst layout = {\n    labelCol: { span: 5 },\n};\ninterface IProps {\n    [x: string]: any;\n}\nconst Login: FC = (props: IProps) => {\n    const [form] = Form.useForm();\n    const [isLoggedIn, setLoggedIn] = useState(false);\n    const { setAuthTokens } = useAuth();\n    const referer = ((props.location || {}).state || {}).referer || '/';\n\n    form.setFieldsValue({ email: localStorage.getItem('email'), password: localStorage.getItem('password') });\n\n    const onFinish = async (values: { email: string; password: string; remember: boolean }) => {\n        if (values.remember) {\n            localStorage.setItem('email', values.email);\n            localStorage.setItem('password', values.password);\n        } else {\n            localStorage.setItem('email', '');\n            localStorage.setItem('password', '');\n        }\n        const { token } = await login(values.email, values.password, values.remember);\n        setAuthTokens({ token });\n        setLoggedIn(true);\n    };\n\n    if (isLoggedIn) {\n        return <Redirect to={referer.pathname || '/'} />;\n    }\n\n    return (\n        <div className={style.body}>\n            <ReactCanvasNest config={{ count: 50 }} style={{ zIndex: 0 }} />\n            <Card title=\"Login\" bordered={false} className={style.login}>\n                <Form\n                    {...layout}\n                    form={form}\n                    name=\"basic\"\n                    initialValues={{ remember: true }}\n                    onFinish={(store) =>\n                        onFinish({ email: store.email, password: store.password, remember: store.remember })\n                    }\n                >\n                    <Form.Item\n                        label=\"E-mail\"\n                        name=\"email\"\n                        rules={[validEmail, { required: true, message: 'Please input your email!' }]}\n                    >\n                        <Input />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Password\"\n                        name=\"password\"\n                        rules={[{ required: true, message: 'Please input your password!' }]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n\n                    <Form.Item name=\"remember\" valuePropName=\"checked\">\n                        <Checkbox>Remember me</Checkbox>\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Submit\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Card>\n        </div>\n    );\n};\nexport default Login;\n","import Axios from 'axios';\nimport { notification } from 'antd';\nimport NProgress from 'nprogress';\n\nconst instance = Axios.create({\n    baseURL: '',\n    withCredentials: false,\n});\n\ninstance.interceptors.request.use(\n    (config) => {\n        NProgress.start();\n        return config;\n    },\n    (err) => {\n        NProgress.done();\n        return Promise.reject(err);\n    }\n);\n\ninstance.interceptors.response.use(\n    (response) => {\n        NProgress.done();\n        if (response.config.url === '/cityapi/cityjson') {\n            return JSON.parse(response.data.match(/{[^}{]*?}/g)[0]);\n        }\n        if (response.status === 200) {\n            return response.data.data;\n        } else {\n            notification.error({ message: response.statusText });\n            return Promise.reject(response.data);\n        }\n    },\n    (err) => {\n        return Promise.reject(err);\n    }\n);\n\nexport default instance;\n","import React, { FC, ReactNode, useEffect, useState } from 'react';\nimport { Layout, Avatar } from 'antd';\nimport style from './Header.module.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CityDispatcher } from '../../../redux/action/city';\nimport { RootState } from '../../../redux';\n\nconst { Header, Content, Footer } = Layout;\n\nexport enum menuType {\n    歌单 = 'songs-list',\n    最新音乐 = 'latest-list',\n}\n\ninterface IProps {\n    children?: ReactNode;\n}\nconst HeaderLayout: FC = (props: IProps) => {\n    const dispatcher = useDispatch();\n    const rootDispatcher = new CityDispatcher(dispatcher);\n    const { cip, cname } = useSelector((state: RootState) => state.city);\n    const [avator, setavator] = useState<number>(Math.floor(Math.random() * (5)) + 1);\n\n    useEffect(() => {\n        rootDispatcher.getLocalCity();\n    }, []);\n    return (\n        <Layout className={style.layout}>\n            <Header>\n                <div className={style.search}>\n                    <div className={style.avator} onClick={() => (window.location.href = '/')}></div>\n                </div>\n                <span>{cname}&nbsp;&nbsp;{cip}</span>\n                {/* <Radio.Group value={locale} onChange={changeLocale}>\n                    <Radio.Button key=\"en\" value={enUS}>\n                    English\n                    </Radio.Button>\n                    <Radio.Button key=\"cn\" value={zhCN}>\n                    中文\n                    </Radio.Button>\n                </Radio.Group> */}\n                <span onClick={() => setavator(Math.floor(Math.random() * (5)) + 1)}>\n                    <Avatar className={style.loginAvatar} src={`http://api.rosysun.cn/sjtx/?type=${avator}`} />\n                </span>\n            </Header>\n            <Content className={style.content}>\n                {/* <ConfigProvider locale={locale}> */}\n                <div className=\"site-layout-content\">{props.children}</div>\n                {/* </ConfigProvider> */}\n            </Content>\n            <Footer style={{ textAlign: 'center' }}>Young Mannix ©2020 Created by Mannix Lei</Footer>\n        </Layout>\n    );\n};\n\nexport default HeaderLayout;\n","import service from './index';\n\n/**\n * login\n * @param name\n * @param password\n */\nexport const getCurrentCity = async () => {\n    return await service.get('/cityapi/cityjson');\n};\n","import { CityActionType } from './../reducer/city';\nimport { Dispatch, Action } from 'redux';\nimport { getCurrentCity } from '../../service/city';\n\nexport interface IDispatchAction extends Action {\n    payload: Partial<any>;\n}\n\nexport class CityDispatcher {\n    private readonly dispatch: Dispatch<IDispatchAction>;\n\n    constructor(dispatch: Dispatch<IDispatchAction>) {\n        this.dispatch = dispatch;\n    }\n\n    public getLocalCity = async () => {\n        const data = await getCurrentCity();\n        this.dispatch({ type: CityActionType.InitData, payload: { ...data }});\n    }\n}\n","import React, { FC, useState, useEffect } from 'react';\nimport { Form, Input, message, Select, Radio } from 'antd';\nimport { useHistory } from 'react-router';\nimport style from './songs-form.module.scss';\nimport { ISongForm } from '../../../../redux/reducer/song';\nimport { Link } from 'react-router-dom';\n\nconst layout = {\n    labelCol: { span: 8 },\n};\nexport enum ProviderType {\n    '网易云' = 'netease',\n    'QQ' = 'qq',\n    '虾米' = 'xiami',\n    '酷我' = 'kuwo',\n}\nexport enum ListType {\n    '热榜' = 1,\n    '搜索' = 2,\n}\n\ninterface IProps {\n    tabDisable?: boolean;\n    inputDisable?: boolean;\n    style?: React.CSSProperties;\n    sendHotQuery?: (p: string) => void;\n    sendListQuery?: (query: ISongForm) => void;\n}\nconst SongsForm: FC<IProps> = (props) => {\n    const history = useHistory();\n    const params = new URLSearchParams(history.location.search);\n    const [form] = Form.useForm();\n    const [pathname, setpathname] = useState<string>(history.location.pathname);\n\n    const [provider, setprovider] = useState<string>(params.get('provider') || ProviderType.网易云);\n    const [keyword, setkeyword] = useState<string>(params.get('keyword') || 'sia'); // 当前搜索关键词\n    const [page, setpage] = useState<number>(Number(params.get('page')) || 1); // 页码\n    form.setFieldsValue({ keyword: params.get('keyword') });\n\n    useEffect(() => {\n        pathname === '/songs/hot' ? search(provider, ListType.热榜) : search(keyword, ListType.搜索);\n    }, []);\n\n    const search = async (val: string, type: ListType) => {\n        if (!val) {\n            message.info('please input something ~~');\n            return;\n        }\n        if (pathname === '/songs/hot') {\n            if (type === ListType.热榜) {\n                props.sendHotQuery?.(val);\n            } else {\n                history.replace(`/songs/list?provider=${provider}&keyword=${val}&page=1`);\n            }\n        } else {\n            props.sendListQuery?.({ provider, keyword: val, page });\n        }\n    };\n    const handleSelectProvider = (value: string) => {\n        setprovider(value);\n    };\n    const selectAfter = (\n        <Select defaultValue={provider} disabled={props.inputDisable} className=\"select-after\" onChange={(value) => handleSelectProvider(value)}>\n            <Select.Option value={ProviderType.网易云}>网易云</Select.Option>\n            <Select.Option value={ProviderType.QQ}>QQ</Select.Option>\n            <Select.Option value={ProviderType.虾米}>虾米</Select.Option>\n            <Select.Option value={ProviderType.酷我}>酷我</Select.Option>\n        </Select>\n    );\n    return (\n        <Form\n            className={style.formBody}\n            style={props.style}\n            {...layout}\n            name=\"basic\"\n            form={form}\n            initialValues={{ remember: true }}\n        >\n            {history.location.pathname === '/songs/hot' && (\n                <Form.Item label=\"\" name=\"provider\">\n                    <Radio.Group\n                        disabled={props.tabDisable}\n                        buttonStyle=\"solid\"\n                        defaultValue={provider}\n                        value={provider}\n                        onChange={(e) => {\n                            setprovider(e.target.value);\n                            search(e.target.value, ListType.热榜);\n                        }}\n                    >\n                        <Radio.Button value={ProviderType.网易云}>网易云</Radio.Button>\n                        <Radio.Button value={ProviderType.QQ}>QQ</Radio.Button>\n                        <Radio.Button value={ProviderType.虾米} disabled>\n                            虾米\n                        </Radio.Button>\n                        <Radio.Button value={ProviderType.酷我} disabled>\n                            酷我\n                        </Radio.Button>\n                    </Radio.Group>\n                </Form.Item>\n            )}\n            <Form.Item label=\"\" name=\"keyword\">\n                <Input\n                    disabled={props.inputDisable}\n                    maxLength={30}\n                    addonAfter={selectAfter}\n                    placeholder=\"please input something~\"\n                    onPressEnter={(event: React.KeyboardEvent<HTMLInputElement>) => {\n                        setkeyword(event.currentTarget.value);\n                        search(event.currentTarget.value, ListType.搜索);\n                    }}\n                />\n            </Form.Item>\n            {pathname === '/songs/list' && <Form.Item>\n                <Link to={'/songs/hot'}>前往热榜</Link>\n            </Form.Item>}\n        </Form>\n    );\n};\nexport default SongsForm;\n","import React from 'react';\nimport { Route, RouteComponentProps, Redirect, Switch } from 'react-router-dom';\nimport { useAuth } from './view/common/Auth';\nimport HeaderLayout from '../src/view/common/header/Header';\n\ninterface IProps {\n    Component: React.FC<RouteComponentProps>;\n    path: string;\n    exact?: boolean;\n}\nconst PrivateRoute = ({ Component, ...rest }: IProps) => {\n    const { authTokens } = useAuth();\n    return (\n        <Switch>\n            <Route\n            {...rest}\n            render={(props) =>\n                authTokens ? (\n                    <HeaderLayout>\n                        <Component {...props} />\n                    </HeaderLayout>\n                ) : (\n                    <Redirect to={{ pathname: '/login', state: { referer: props.location } }} />\n                )\n            }\n        />\n        </Switch>\n    );\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { Tag } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\nimport { PlayCircleOutlined, DownloadOutlined, PlayCircleFilled } from '@ant-design/icons';\nimport style from './songs-list.module.scss';\nimport { ISong } from '../../../../redux/reducer/song';\n\nexport const songsColumn: (width: number, play: (item: ISong) => void, download: (platform: string, id: string, name: string) => void) => ColumnsType<ISong> = (\n    width,\n    play,\n    download,\n) => {\n    return width > 600\n        ? [\n              {\n                  width: '3rem',\n                  render: (_TEXT, record, index) => (\n                      <span>{record.playing ? <PlayCircleFilled className={style.palying} /> : index + 1}</span>\n                  ),\n              },\n              {\n                  title: 'song-name',\n                  dataIndex: 'name',\n                  key: 'name',\n                  width: '17rem',\n                  render: (text: string, record: ISong) => (\n                      <a href={record.link} target=\"_blank\">\n                          {text}\n                      </a>\n                  ),\n              },\n              {\n                  title: 'singer-name',\n                  dataIndex: 'artists',\n                  key: 'artists',\n                  className: `${style.hide}`,\n                  render: (_TEXT: string, record: ISong) => {\n                      return record.artists.map((item) => {\n                          const color = record.artists.length > 5 ? 'geekblue' : 'green';\n                          return (\n                              <Tag color={color} key={item.name}>\n                                  <a href={item.link} target=\"_blank\">\n                                      {item.name}\n                                  </a>\n                              </Tag>\n                          );\n                      });\n                  },\n              },\n              {\n                  title: 'album',\n                  dataIndex: 'album',\n                  key: 'album',\n                  className: `${style.hide}`,\n                  render: (_TEXT: string, record: ISong) => (\n                      <Tag key={record.album.name}>\n                          <a href={record.album.link} target=\"_blank\">\n                              {record.album.name}\n                          </a>\n                      </Tag>\n                  ),\n              },\n              {\n                  title: 'platform',\n                  dataIndex: 'platform',\n                  key: 'platform',\n                  className: `${style.hide}`,\n              },\n              {\n                  title: 'operation',\n                  dataIndex: 'operation',\n                  key: 'operation',\n                  align: 'center',\n                  render: (_TEXT: string, record: ISong) => (\n                      <div style={{ display: 'flex', justifyContent: 'space-around', fontSize: '20px' }}>\n                          <PlayCircleOutlined onClick={() => play(record)} />\n                          <DownloadOutlined onClick={() => download(record.platform, record.originalId, record.name)} />\n                      </div>\n                  ),\n              },\n          ]\n        : [\n              {\n                  title: 'song-name',\n                  dataIndex: 'name',\n                  key: 'name',\n                  width: '17rem',\n                  render: (text: string, record: ISong) => (\n                      <div>\n                          <a href={record.link} target=\"_blank\">\n                              {text}\n                          </a>\n                          <br />\n                          {record.artists.map((item) => {\n                              const color = record.artists.length > 5 ? 'geekblue' : 'green';\n                              return (\n                                  <Tag color={color} key={item.name}>\n                                      <a href={item.link} target=\"_blank\">\n                                          {item.name}\n                                      </a>\n                                  </Tag>\n                              );\n                          })}\n                      </div>\n                  ),\n              },\n              {\n                  title: 'operation',\n                  dataIndex: 'operation',\n                  key: 'operation',\n                  align: 'center',\n                  render: (_TEXT: string, record: ISong) => (\n                      <div style={{ display: 'flex', justifyContent: 'space-around', fontSize: '20px' }}>\n                          <PlayCircleOutlined onClick={() => play(record)} />\n                          <DownloadOutlined onClick={() => download(record.platform, record.originalId, record.name)} />\n                      </div>\n                  ),\n              },\n          ];\n};\n","import service from './index';\nimport { ISongQuery, ISong } from '../redux/reducer/song';\n\n/**\n * fetch song list\n * @param provider\n * @param keyword\n */\nexport const initSongsList = async (query: ISongQuery): Promise<{ songs: ISong[]; totalCount: number }> => {\n    return await service.get('/api/search', {\n        params: {\n            ...query,\n        },\n    });\n};\n\n/**\n * play song\n * @param platform\n * @param id\n */\nexport const playSong = async (platform: string, id: string): Promise<{ songSource: string }> => {\n    return await service.get(`/api/song_source/${platform}/${id}`);\n};\n\n/**\n * load hot songs\n */\nexport const initHotSong = async (provider: string): Promise<{ songs: ISong[]; totalCount: number }> => {\n    return await service.get(`/api/hot_list/${provider}`);\n};\n","import React, { FC, useEffect, useState } from 'react';\nimport style from './news.module.scss';\nimport { List, Avatar, Divider, Button, Skeleton } from 'antd';\nimport { newsTypeList } from './index.function';\nimport { getNewsList } from '../../../service/news';\nimport { IInitialState } from '../../../redux/reducer/news';\nimport { useHistory } from 'react-router-dom';\n\nexport enum NewsType {\n    'zhihu' = '知乎热榜',\n    'weibo' = '微博热搜',\n    'weixin' = '微信 ‧ 24h热文榜,',\n    'baidu' = '百度 ‧ 实时热点',\n    'toutiao' = '今日头条',\n    '\"163\"' = '网易新闻',\n    'xl' = '新浪网 ‧ 热词排行榜',\n    '36k' = '36氪 ‧ 24小时热榜(默认)',\n    'hitory' = '历史上的今天',\n    'sspai' = '少数派',\n    'csdn' = '**csdn **今日推荐',\n    'juejin' = '掘金热榜',\n    'bilibili' = '哔哩哔哩热榜',\n    'douyin' = '抖音视频榜',\n    '52pojie' = '吾爱破解热榜',\n    'v2ex' = 'V2ex 热帖',\n    'hostloc' = '全球主机论坛热帖',\n}\n\nexport interface INewsType {\n    key: string;\n    value: string;\n}\n\nconst NewsHome: FC = () => {\n    const history = useHistory();\n    const params = new URLSearchParams(history.location.search);\n    const [type, settype] = useState<string>(params.get('type') || 'zhihu');\n    const [newsData, setnewsData] = useState<IInitialState>({ last_update: '', name: '', list: [] });\n    const [loading, setloading] = useState<boolean>(false);\n    const [currentTime, setcurrentTime] = useState(new Date().toLocaleString());\n\n    useEffect(() => {\n        initList(type);\n        const t = setInterval(() => {\n            setcurrentTime(new Date().toLocaleString());\n        }, 1000);\n\n        return () => {\n            clearTimeout(t);\n        };\n    }, []);\n\n    const initList = async (type: string) => {\n        setloading(true);\n        history.replace(`/news?type=${type}`);\n        await getNewsList(type)\n            .then((res) => {\n                setnewsData(res);\n                setloading(false);\n            })\n            .catch(() => {\n                setloading(false);\n            });\n    };\n\n    const handleChangeType = (type: string) => {\n        settype(type);\n        initList(type);\n    };\n\n    return (\n        <div className={style.newsbody}>\n            <div>\n                {newsTypeList.map((item) => (\n                    <span>\n                        <Button type=\"link\" disabled={loading} onClick={() => handleChangeType(item.key)}>\n                            {item.value}\n                        </Button>\n                        <Divider type=\"vertical\" />\n                    </span>\n                ))}\n            </div>\n            <div className={style.header}>\n                <div style={{ marginRight: '3rem' }}>更新时间: {newsData.last_update}</div>\n                <div>\n                    来自: <span className={style.source}>{newsData.name}</span>\n                </div>\n                <div style={{ marginLeft: '3rem' }}>当前时间: {currentTime}</div>\n            </div>\n            <Skeleton active loading={loading}>\n                <List\n                    itemLayout=\"horizontal\"\n                    dataSource={newsData.list}\n                    renderItem={(item) => (\n                        <List.Item>\n                            <List.Item.Meta\n                                avatar={\n                                    <Avatar\n                                        src={`http://api.rosysun.cn/sjtx/?type=${Math.floor(Math.random() * 5) + 1}`}\n                                    />\n                                }\n                                title={\n                                    <a href={item.link} target=\"_blank\">\n                                        {item.title}\n                                    </a>\n                                }\n                                description={item.other}\n                            />\n                        </List.Item>\n                    )}\n                />\n            </Skeleton>\n        </div>\n    );\n};\nexport default NewsHome;\n","import React, { FC, useState, useEffect, SyntheticEvent } from 'react';\nimport { Table, Skeleton, message, Button } from 'antd';\nimport { songsColumn } from './columns';\nimport ReactAudioPlayer from 'react-audio-player';\nimport style from './songs-list.module.scss';\nimport { RouteComponentProps, useHistory } from 'react-router';\nimport { PlayCircleOutlined } from '@ant-design/icons';\nimport { ISong, ISongForm, IAlbum } from '../../../../redux/reducer/song';\nimport { playSong, initSongsList } from '../../../../service/songs';\nimport SongsForm, { ProviderType } from '../songs-form/songs-form';\n\nexport interface ISongState {\n    songsList: ISong[];\n    total: number;\n}\n\nconst SongsList: FC<RouteComponentProps> = () => {\n    const history = useHistory();\n    const [currentSongUrl, setcurrentSongUrl] = useState('');\n    const params = new URLSearchParams(history.location.search);\n    const [provider, setprovider] = useState<string>(params.get('provider') || ProviderType.网易云);\n    const [keyword, setkeyword] = useState<string>(params.get('keyword') || 'sia'); // 当前搜索关键词\n    const [page, setpage] = useState<number>(Number(params.get('page')) || 1); // 页码\n\n    const [currentIndex, setcurrentIndex] = useState<number>(0);\n    const [width, setwidth] = useState<number>(1080);\n    const [name, setname] = useState<string>('');\n    const [autoPlay, setautoPlay] = useState<boolean>(false);\n    const [singer, setsinger] = useState<IAlbum[]>([]); // 歌手名字\n    const [loading, setloading] = useState<boolean>(false);\n    const [list, setlist] = useState<ISong[]>([]);\n    const [total, settotal] = useState<number>(0);\n\n    useEffect(() => {\n        getWidth();\n    }, []);\n\n    const getWidth = () => {\n        const width = document.querySelector('body')?.offsetWidth;\n        setwidth(width!);\n    };\n    const init = async (p: string, k: string, page: number) => {\n        setkeyword(k);\n        setprovider(p);\n        setpage(page);\n        setloading(true);\n        await initSongsList({ page, provider: p, keyword: k }).then((res) => {\n            const list = res.songs.map((item) => ({ palying: false, ...item }));\n            setlist(list);\n            settotal(res.totalCount);\n            setloading(false);\n        }).catch(() => {\n            setloading(false);\n        });\n    };\n    const play = async (record: ISong) => {\n        const tempList = list;\n        tempList[tempList.findIndex(item => item.originalId === record.originalId)].playing = true;\n        setlist(tempList);\n        setautoPlay(true);\n        setsinger(record.artists);\n        setname(record.name);\n        await playSong(record.platform, record.originalId)\n            .then((res) => {\n                setcurrentSongUrl(res.songSource);\n            })\n            .catch(() => {\n                message.error('获取播放信息失败，请重试');\n            });\n        const timer = setInterval(() => marquee(), 20);\n    };\n\n    const download = async (platform: string, id: string, name: string) => {\n        await playSong(platform, id)\n            .then((res) => {\n                if (navigator.platform.match(/Win|Linux|MAC/i)) {\n                    const a = document.createElement('a');\n                    a.setAttribute('href', res.songSource);\n                    a.setAttribute('target', '_blank');\n                    a.setAttribute('download', name);\n                    a.click();\n                } else {\n                    const myFrame= document.createElement('iframe');\n                    myFrame.src = res.songSource;\n                    myFrame.style.display = name;\n                    document.body.appendChild(myFrame);\n                }\n            })\n            .catch(() => {\n                message.error('获取播放信息失败，请重试');\n            });\n    };\n\n    const columns = songsColumn(width, play, download);\n\n    const changeSize = (page: number) => {\n        setpage(page);\n        init(provider, keyword, page);\n    };\n    const playAll = async () => {\n        setautoPlay(true);\n        setcurrentIndex(0);\n        play(list[0]);\n    };\n    const handleEnd = (_e: SyntheticEvent<HTMLAudioElement, Event>) => {\n        if (currentIndex < list.length - 1) {\n            const tempList = list;\n            tempList[currentIndex].playing = false;\n            setlist(tempList);\n            setcurrentIndex(currentIndex + 1);\n            play(list[currentIndex + 1]);\n        } else {\n            setname('');\n            setcurrentIndex(0);\n            setautoPlay(false);\n        }\n    };\n    const receiveQuery = (form: ISongForm) => {\n        history.replace(`/songs/list?provider=${form.provider}&keyword=${form.keyword}&page=1`);\n        init(form.provider, form.keyword, form.page);\n    };\n    const marquee = () => {\n        const box = document.getElementById('box');\n        const songName = document.getElementById('divList');\n        const singername = document.getElementById('copyDiv');\n        if (singername!.offsetLeft - box!.scrollLeft <= -110) {\n            box!.scrollLeft -= songName!.offsetWidth - singername!.clientWidth;\n        } else {\n            box!.scrollLeft++;\n        }\n    };\n    return (\n        <div>\n            <SongsForm sendListQuery={receiveQuery} inputDisable={loading}/>\n            <Skeleton active loading={loading}>\n                <Button type=\"link\" className={style.playAll} icon={<PlayCircleOutlined />} onClick={() => playAll()}>播放全部</Button>\n                <Table\n                    columns={columns}\n                    dataSource={list}\n                    pagination={{ current: page, total, onChange: changeSize, showSizeChanger: false }}\n                />\n            </Skeleton>\n            <div className={style.player}>\n                <div id=\"box\" style={{ width: '15rem', overflow: 'hidden', position: 'absolute', left: '5rem' }}>\n                    <div className={style.currentSong} id=\"divList\" style={{ width: '50rem' }}>\n                        <div className={style.songName}>{name}</div>\n                        <div id=\"copyDiv\" style={{ float: 'left', marginLeft: '2rem', lineHeight: '5' }}>{singer.map(item => item.name + ' ')}</div>\n                    </div>\n                </div>\n                <ReactAudioPlayer\n                    className={style.audio}\n                    src={currentSongUrl}\n                    autoPlay={autoPlay}\n                    controls\n                    onEnded={(e) => handleEnd(e)}\n                />\n                <div className={style.provider}>{provider}</div>\n            </div>\n        </div>\n    );\n};\nexport default SongsList;\n","import React, { FC } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Card } from 'antd';\nimport Meta from 'antd/lib/card/Meta';\nimport songsImg from '../../../src/static/img/troye.jpeg';\nimport newsImg from '../../../src/static/img/WechatIMG2.jpeg';\nimport nothing from '../../../src/static/img/WechatIMG3.jpeg';\nimport style from './Home.module.scss';\n\nconst Home: FC = () => {\n    const history = useHistory();\n    return (\n        <div className={style.body}>\n            <Card hoverable className={style.card} cover={<img alt=\"hotImg\" src={songsImg} />} onClick={() => history.push('/songs/hot')}>\n                <Meta title={<Link to={'/songs/hot'}>听会歌～</Link>} description=\"Popular playlist\" />\n            </Card>\n            <Card hoverable className={style.card} cover={<img alt=\"listImg\" src={newsImg} />} onClick={() => history.push('/news')}>\n                <Meta title={<Link to={'/news'}>看会新闻~</Link>} description=\"Popular news\" />\n            </Card>\n            <Card hoverable className={style.card} cover={<img alt=\"listImg\" src={nothing} />} onClick={() => history.push('')}>\n                <Meta title={<Link to={''}>后续板块陆续开启～</Link>} description=\"敬请期待。。。\" />\n            </Card>\n        </div>\n    );\n};\n\nexport default Home;\n","import React from 'react';\n\nconst SignUp = () => {\n    return <div>sign up</div>;\n};\nexport default SignUp;\n","import React, { FC, useState, SyntheticEvent, useEffect } from 'react';\nimport { Table, Skeleton, Button, message } from 'antd';\nimport ReactAudioPlayer from 'react-audio-player';\nimport style from '../songs-list/songs-list.module.scss';\nimport { songsColumn } from '../songs-list/columns';\nimport { RouteComponentProps, useHistory } from 'react-router';\nimport { PlayCircleOutlined } from '@ant-design/icons';\nimport { ISong, IAlbum } from '../../../../redux/reducer/song';\nimport { playSong, initHotSong } from '../../../../service/songs';\nimport SongsForm from '../songs-form/songs-form';\n\nexport interface ISongState {\n    songsList: ISong[];\n    total: number;\n}\n\nconst HotSongs: FC<RouteComponentProps> = () => {\n    const history = useHistory();\n    const [currentSongUrl, setcurrentSongUrl] = useState('');\n    const [width, setwidth] = useState<number>(1080);\n    const [autoPlay, setautoPlay] = useState<boolean>(false);\n\n    const [provider, setprovider] = useState<string>(''); // 当前平\n    const [currentIndex, setcurrentIndex] = useState(0); // 当前索引\n\n    const [name, setname] = useState<string>(''); // 当前歌名\n    const [singer, setsinger] = useState<IAlbum[]>([]); // 歌手名字\n    const [songsList, setsongsList] = useState<ISong[]>([]);\n    const [total, settotal] = useState<number>(0);\n    const [loading, setloading] = useState<boolean>(false);\n\n    useEffect(() => {\n        getWidth();\n    }, []);\n    const play = async (record: ISong) => {\n        const tempList = songsList;\n        tempList[tempList.findIndex(item => item.originalId === record.originalId)].playing = true;\n        setsongsList(tempList);\n        setname(record.name);\n        setsinger(record.artists);\n        setautoPlay(true);\n        const data = await playSong(record.platform, record.originalId);\n        setcurrentSongUrl(data.songSource);\n        const timer = setInterval(() => marquee(), 20);\n    };\n    const download = async (platform: string, id: string, name: string) => {\n        await playSong(platform, id)\n            .then((res) => {\n                if (navigator.platform.match(/Win|Linux|MAC/i)) {\n                    const a = document.createElement('a');\n                    a.setAttribute('href', res.songSource);\n                    a.setAttribute('target', '_blank');\n                    a.setAttribute('download', name);\n                    a.click();\n                } else {\n                    const myFrame= document.createElement('iframe');\n                    myFrame.src = res.songSource;\n                    myFrame.style.display = name;\n                    document.body.appendChild(myFrame);\n                }\n            })\n            .catch(() => {\n                message.error('获取播放信息失败，请重试');\n            });\n    };\n    const getWidth = () => {\n        const width = document.querySelector('body')?.offsetWidth;\n        setwidth(width!);\n    };\n    const playAll = async () => {\n        setautoPlay(true);\n        setcurrentIndex(0);\n        play(songsList[0]);\n    };\n    const handleEnd = (_e: SyntheticEvent<HTMLAudioElement, Event>) => {\n        if (currentIndex < songsList.length - 1) {\n            const tempList = songsList;\n            tempList[currentIndex].playing = false;\n            setsongsList(tempList);\n            setcurrentIndex(currentIndex + 1);\n            play(songsList[currentIndex + 1]);\n        } else {\n            setautoPlay(false);\n            setname('');\n            setcurrentIndex(0);\n        }\n    };\n    const receiveQuery = (val: string) => {\n        history.replace(`/songs/hot?provider=${val}`);\n        setprovider(val);\n        initList(val);\n    };\n    const initList = async (p: string) => {\n        setloading(true);\n        await initHotSong(p).then((res) => {\n            setsongsList(res.songs);\n            settotal(res.totalCount);\n            setloading(false);\n        }).catch(() => {\n            setloading(false);\n        });\n    };\n    const marquee = () => {\n        const box = document.getElementById('box');\n        const songName = document.getElementById('divList');\n        const singername = document.getElementById('copyDiv');\n        if (singername!.offsetLeft - box!.scrollLeft <= -110) {\n            box!.scrollLeft -= songName!.offsetWidth - singername!.clientWidth;\n        } else {\n            box!.scrollLeft++;\n        }\n    };\n\n    const columns = songsColumn(width, play, download);\n    return (\n        <div>\n            <SongsForm sendHotQuery={receiveQuery} tabDisable={loading}/>\n            <div>\n                <Button type=\"link\" className={style.playAll} icon={<PlayCircleOutlined />} onClick={() => playAll()}>播放全部</Button>\n            </div>\n            <Skeleton active loading={loading}><Table columns={columns} dataSource={songsList} pagination={false} /></Skeleton>\n            <div className={style.player}>\n                <div id=\"box\" style={{ width: '15rem', overflow: 'hidden', position: 'absolute', left: '5rem' }}>\n                    <div className={style.currentSong} id=\"divList\" style={{ width: '50rem' }}>\n                        <div className={style.songName}>{name}</div>\n                        <div id=\"copyDiv\" style={{ float: 'left', marginLeft: '2rem', lineHeight: '5' }}>{singer.map(item => item.name + ' ')}</div>\n                    </div>\n                </div>\n                <ReactAudioPlayer\n                    src={currentSongUrl}\n                    autoPlay={autoPlay}\n                    className={style.audio}\n                    controls\n                    onEnded={(e) => handleEnd(e)}\n                    children={<Button type=\"link\">download</Button>}\n                />\n                <div className={style.provider}>{provider}</div>\n            </div>\n        </div>\n    );\n};\nexport default HotSongs;\n","import { INewsType } from '.';\n\nexport const newsTypeList: INewsType[] = [\n    {\n        key: 'zhihu',\n        value: '知乎热榜',\n    },\n    {\n        key: 'weibo',\n        value: '微博热搜',\n    },\n    {\n        key: 'weixin',\n        value: '微信 ‧ 24h热文榜',\n    },\n    {\n        key: 'baidu',\n        value: '百度 ‧ 实时热点',\n    },\n    {\n        key: 'toutiao',\n        value: '今日头条',\n    },\n    {\n        key: '163',\n        value: '网易新闻',\n    },\n    {\n        key: 'xl',\n        value: '新浪网 ‧ 热词排行榜',\n    },\n    {\n        key: '36k',\n        value: '36氪 ‧ 24小时热榜(默认)',\n    },\n    {\n        key: 'hitory',\n        value: '历史上的今天',\n    },\n    {\n        key: 'sspai',\n        value: '少数派',\n    },\n    {\n        key: 'csdn',\n        value: '**csdn **今日推荐',\n    },\n    {\n        key: 'juejin',\n        value: '掘金热榜',\n    },\n    {\n        key: 'bilibili',\n        value: '哔哩哔哩热榜',\n    },\n    {\n        key: 'douyin',\n        value: '抖音视频榜',\n    },\n    {\n        key: '52pojie',\n        value: '吾爱破解热榜',\n    },\n    {\n        key: 'v2ex',\n        value: 'V2ex 热帖',\n    },\n    {\n        key: 'hostloc',\n        value: '全球主机论坛热帖',\n    },\n];\n","import service from './index';\nimport { IInitialState } from '../redux/reducer/news';\n\nexport const getNewsList = async (type: string): Promise<IInitialState> => {\n    return await service.post('/newsapi/tophub/get', { type });\n};\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Login from '../src/view/login/Login';\nimport { AuthContext } from './view/common/Auth';\nimport PrivateRoute from './PrivateRoute';\nimport SongsList from './view/pages/songs/songs-list/songs-list';\nimport Home from './view/home/Home';\nimport SignUp from './view/sign-up/sign-up';\nimport HotSongs from './view/pages/songs/hot-songs/hot-songs';\nimport NewsHome from './view/pages/news/index';\n\nconst App = () => {\n    const existingTokens = JSON.parse(localStorage.getItem('tokens')!);\n    const [authTokens, setAuthTokens] = useState(existingTokens);\n\n    const setTokens = (data: object) => {\n        localStorage.setItem('tokens', JSON.stringify(data));\n        setAuthTokens(data);\n    };\n    return (\n        <AuthContext.Provider value={{ authTokens, setAuthTokens: setTokens }}>\n            <Router>\n                <Switch>\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/signUp\" component={SignUp} />\n                    <PrivateRoute path=\"/\" Component={Home} />\n                </Switch>\n                <PrivateRoute path=\"/songs/list\" Component={SongsList} />\n                <PrivateRoute path=\"/songs/hot\" Component={HotSongs} />\n\n                <PrivateRoute path=\"/news\" Component={NewsHome} />\n            </Router>\n        </AuthContext.Provider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { Reducer, Action } from 'redux';\n\nexport enum NewsActionType {\n    InitList,\n}\nexport interface IInitialState {\n    last_update: string;\n    name: string;\n    list: Array<{ title: string, link: string, other: string }>;\n}\n\nexport const initialState: IInitialState = {\n    last_update: '',\n    name: '',\n    list: [],\n};\n\nexport interface IDispatchAction extends Action<NewsActionType> {\n    payload: Partial<IInitialState>;\n}\nexport const newsReducer: Reducer<IInitialState, IDispatchAction> = (\n    state = initialState,\n    action\n) => {\n    switch (action.type) {\n        case NewsActionType.InitList:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n};\n","import { Reducer, Action } from 'redux';\n\nexport enum ActionType {\n    UpdateName,\n    UpdateAddress,\n    DeleteName,\n    DeleteAddress,\n}\nexport interface IInitialState {\n    name: string;\n    address: string;\n}\n\nexport const initialState: IInitialState = {\n    name: '',\n    address: '',\n};\n\nexport interface IDispatchAction extends Action<ActionType> {\n    payload: Partial<IInitialState>;\n}\nexport const testReducer: Reducer<IInitialState, IDispatchAction> = (\n    state = initialState,\n    action\n) => {\n    switch (action.type) {\n        case ActionType.UpdateName:\n            return { ...state, name: action.payload.name || '' };\n        case ActionType.UpdateAddress:\n            return { ...state, address: action.payload.address || '' };\n        case ActionType.DeleteName:\n            return { ...state, name: '' };\n        case ActionType.DeleteAddress:\n            return { ...state, address: '' };\n        default:\n            return state;\n    }\n};\n","import { Reducer, Action } from \"redux\";\n\nexport interface ISongForm {\n    provider: string;\n    keyword: string;\n    page: number;\n}\nexport interface ISong {\n    originalId: string;\n    name: string;\n    link: string;\n    mvLink: string;\n    artists: IAlbum[];\n    album: IAlbum;\n    hasCopyright: boolean;\n    fee: number;\n    platform: string;\n    playing: boolean;\n}\n\nexport interface IAlbum {\n    name: string;\n    link: string;\n}\n\nexport interface ISongInitial {\n    songsList: ISong[];\n    total: number;\n}\n\nconst initState: ISongInitial = {\n    songsList: [],\n    total: 0,\n};\n\nexport interface ISongQuery {\n    provider: string;\n    keyword: string;\n    page: number;\n}\n\nexport enum SongActionType {\n    GetSongList,\n    GetHotSong\n}\n\nexport interface ISongDispatchAction extends Action<SongActionType> {\n    payload: Partial<ISongInitial>;\n}\n\nexport const songReducer: Reducer<ISongInitial, ISongDispatchAction> = (\n    state = initState,\n    action\n): ISongInitial => {\n    switch (action.type) {\n        case SongActionType.GetSongList:\n            return {\n                songsList: action.payload.songsList!,\n                total: action.payload.total!,\n            };\n        case SongActionType.GetHotSong:\n            return {\n                ...state,\n                songsList: action.payload.songsList!,\n                total: action.payload.total!,\n            };\n        default:\n            return state;\n    }\n};\n","import { Reducer, Action } from 'redux';\n\nexport enum LoadingActionType {\n    startLoading,\n    stopLoading,\n}\nexport interface IInitialState {\n    loading: boolean;\n}\n\nexport const initialState: IInitialState = {\n    loading: false,\n};\n\nexport interface IDispatchAction extends Action<LoadingActionType> {\n    payload: Partial<IInitialState>;\n}\nexport const loadingReducer: Reducer<IInitialState, IDispatchAction> = (\n    state = initialState,\n    action\n) => {\n    switch (action.type) {\n        case LoadingActionType.startLoading:\n            return { loading: true };\n        case LoadingActionType.stopLoading:\n            return { loading: false };\n        default:\n            return state;\n    }\n};\n","import { newsReducer } from './reducer/news';\nimport { combineReducers } from 'redux';\n// import { userReducer } from './reducer/user';\nimport { testReducer } from './reducer/test';\nimport { songReducer } from './reducer/song';\nimport { cityReducer } from './reducer/city';\nimport { loadingReducer } from './reducer/loading';\n\nconst allReducer = {\n    // user: userReducer,\n    song: songReducer,\n    test: testReducer,\n    city: cityReducer,\n    news: newsReducer,\n    loading: loadingReducer,\n};\nconst rootReducer = combineReducers(allReducer);\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport rootReducer from './reducer';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk, promiseMiddleware));\nexport type RootState = ReturnType<typeof rootReducer>;\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.module.scss';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux';\nimport 'nprogress/nprogress.css';\n\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"Header_layout__LeZNa\",\"avator\":\"Header_avator__nvnhF\",\"search\":\"Header_search___htFL\",\"content\":\"Header_content__3UTcU\",\"loginAvatar\":\"Header_loginAvatar__WQ4eH\"};"],"sourceRoot":""}